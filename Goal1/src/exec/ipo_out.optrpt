Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.8.0 Build 20221119_000000

Compiler options: -I/glob/development-tools/versions/oneapi/2023.0.1/oneapi/mpi/2021.8.0/include/gfortran -I/glob/development-tools/versions/oneapi/2023.0.1/oneapi/mpi/2021.8.0/include -fPIC -cpp -fpp -O3 -qopt-zmm-usage=high -xCORE-AVX512 -qopt-report=5 -qopt-report-phase=vec -g -qopenmp -ipo -o /home/u175356/ScalSALE-main/src/exec/main -L/home/u175356/fortran-json/json-fortran/build/lib -Wl,-rpath,/home/u175356/fortran-json/json-fortran/build/lib:/home/u175356/ScalSALE-main/build/lib -lmpi -lz -ljsonfortran -L/glob/development-tools/versions/oneapi/2023.0.1/oneapi/mpi/2021.8.0/lib/release -L/glob/development-tools/versions/oneapi/2023.0.1/oneapi/mpi/2021.8.0/lib -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker /glob/development-tools/versions/oneapi/2023.0.1/oneapi/mpi/2021.8.0/lib/release -Xlinker -rpath -Xlinker /glob/development-tools/versions/oneapi/2023.0.1/oneapi/mpi/2021.8.0/lib -lmpifort -lmpi -lrt -lpthread -Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -Xlinker --enable-new-dtags -ldl

Begin optimization report for: REPLACE_WORDS_MODULE::REPLACE_MATERIAL

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/replace_words.f90(189,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: REPLACE_WORDS_MODULE::REPLACE_CONTOUR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/replace_words.f90(114,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/replace_words.f90(119,13)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: REPLACE_WORDS_MODULE::REPLACE_ZONE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/replace_words.f90(34,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/replace_words.f90(39,13)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DATAFILE_MODULE^PARSE_MESH

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(531,38)
   remark #15389: vectorization support: reference at (531:38) has unaligned access
   remark #15388: vectorization support: reference at (531:38) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 2.000 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(534,38)
   remark #15389: vectorization support: reference at (534:38) has unaligned access
   remark #15388: vectorization support: reference at (534:38) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(534,38)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(535,38)
   remark #15389: vectorization support: reference at (535:38) has unaligned access
   remark #15388: vectorization support: reference at (535:38) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(535,38)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: DATAFILE_MODULE^PARSE_LAYERS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(559,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(565,24)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15355: vectorization support: at (565:24) is int type reduction
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(565,24)
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 4.100
   remark #15355: vectorization support: at (565:24) is int type reduction
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(565,24)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15355: vectorization support: at (565:24) is int type reduction
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(568,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(568,9)
      remark #15389: vectorization support: reference at (568:9) has unaligned access
      remark #15388: vectorization support: reference at (568:9) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(568,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (568:9) has unaligned access
      remark #15388: vectorization support: reference at (568:9) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.750
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(575,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(581,24)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15355: vectorization support: at (581:24) is int type reduction
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(581,24)
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 4.100
   remark #15355: vectorization support: at (581:24) is int type reduction
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(581,24)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15355: vectorization support: at (581:24) is int type reduction
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(584,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(584,9)
      remark #15389: vectorization support: reference at (584:9) has unaligned access
      remark #15388: vectorization support: reference at (584:9) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(584,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (584:9) has unaligned access
      remark #15388: vectorization support: reference at (584:9) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.750
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(599,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(607,28)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15355: vectorization support: at (607:28) is int type reduction
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(607,28)
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 4.100
   remark #15355: vectorization support: at (607:28) is int type reduction
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(607,28)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15355: vectorization support: at (607:28) is int type reduction
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 5.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(610,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(610,13)
      remark #15389: vectorization support: reference at (610:13) has unaligned access
      remark #15388: vectorization support: reference at (610:13) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(610,13)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (610:13) has unaligned access
      remark #15388: vectorization support: reference at (610:13) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.750
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DATAFILE_MODULE^PARSE_MATERIALS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(632,9)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between WITNESS_ARRAY(:) (632:9) and WITNESS_ARRAY (632:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(649,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(655,13)
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(656,29) ]
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(656,53) ]
      remark #15382: vectorization support: call to function STR_EQV cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(656,21) ]
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(657,33) ]
      remark #15382: vectorization support: call to function STR_EQV cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(657,25) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between at (656:29) and at (656:21)
      remark #15346: vector dependence: assumed OUTPUT dependence between at (656:21) and at (656:29)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DATAFILE_MODULE^PARSE_CONTOURS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(747,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(835,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(840,13)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (840:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.250
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 8.100 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(840,13)
      remark #15389: vectorization support: reference at (840:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 3.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 8.100 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(840,13)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (840:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.250
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 8.100 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(856,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(861,13)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (861:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.364
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 8.100 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(861,13)
      remark #15389: vectorization support: reference at (861:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 3.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 8.100 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(861,13)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (861:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.364
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 8.100 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DATAFILE_MODULE^PARSE_ZONES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(890,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(909,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(928,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: DATAFILE_MODULE^PARSE_DIAGNOSTICS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(195,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(201,13)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(213,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(218,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(227,25)
         remark #15523: loop was not vectorized: loop control variable diag_counter was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/datafile_object.f90(241,25)
         remark #15523: loop was not vectorized: loop control variable diag_counter was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^CONSTRUCTOR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(297,30)
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(314,25) ]
   remark #15382: vectorization support: call to function for_stop_core_quiet cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(315,25) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between bc_c_wrap (299:25) and bc_c_wrap (312:25)
   remark #15346: vector dependence: assumed ANTI dependence between bc_c_wrap (312:25) and bc_c_wrap (299:25)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(437,9)
   remark #15382: vectorization support: call to function memcpy cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(438,13) ]
   remark #15382: vectorization support: call to function STR_EQV cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(439,17) ]
   remark #15382: vectorization support: call to function STR_EQV cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(443,22) ]
   remark #15382: vectorization support: call to function STR_EQV cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(447,22) ]
   remark #15382: vectorization support: call to function memcpy cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(448,17) ]
   remark #15382: vectorization support: call to function CONSTRUCTOR_TEXTUAL_DIAGNOSTIC_T cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(449,70) ]
   remark #15382: vectorization support: call to function ?1memcpy cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(449,17) ]
   remark #15382: vectorization support: call to function TEXTUAL_DIAGNOSTIC_MODULE^TEXTUAL_DIAGNOSTIC_INIT cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(450,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between word (438:13) and word (449:70)
   remark #15346: vector dependence: assumed OUTPUT dependence between word (449:70) and word (438:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(467,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(478,18)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(482,13)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(483,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (483:22) and at (483:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (483:22) and at (483:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(488,18)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(489,18)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(493,18)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(501,18)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(503,18)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(526,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(535,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(536,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(537,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (539:25) and VOL(i,j,k) (539:25)
         remark #15346: vector dependence: assumed ANTI dependence between VOL(i,j,k) (539:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (539:25)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(538,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (539:25) and VOL(i,j,k) (539:25)
            remark #15346: vector dependence: assumed ANTI dependence between VOL(i,j,k) (539:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (539:25)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(538,21)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(537,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(538,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (539:25) and DENSITY_VOF(tmp_mat,i,j,k) (539:25)
            remark #15346: vector dependence: assumed ANTI dependence between DENSITY_VOF(tmp_mat,i,j,k) (539:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (539:25)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(538,21)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(545,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(546,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(547,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(88,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(88,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(88,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(88,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(88,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(91,13)
   remark #15389: vectorization support: reference constructor%NORMAL_I1(:) has unaligned access
   remark #15389: vectorization support: reference constructor%NORMAL_INXP(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(92,13) ]
   remark #15389: vectorization support: reference constructor%NORMAL_J1(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(93,13) ]
   remark #15389: vectorization support: reference constructor%NORMAL_JNYP(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(94,13) ]
   remark #15389: vectorization support: reference constructor%NORMAL_K1(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(95,13) ]
   remark #15389: vectorization support: reference constructor%NORMAL_KNZP(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(96,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.486
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 9.250 
   remark #15478: estimated potential speedup: 1.030 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(92,13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(93,13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(94,13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(95,13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(96,13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(97,13)
   remark #15389: vectorization support: reference constructor has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 1.840 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(97,13)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9) inlined into /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(114,14)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9) inlined into /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(114,14)
<Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.210 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9) inlined into /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(114,14)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9) inlined into /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(114,14)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15416: vectorization support: non-unit strided store was generated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9) inlined into /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(114,14)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(58,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(60,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(63,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(64,21)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference init_values(i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(65,25) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.250
            remark #15301: PEEL LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 9.160 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(64,21)
            remark #15388: vectorization support: reference init_values(i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(65,25) ]
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.833
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 9.160 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(64,21)
         <Remainder loop for vectorization>
            remark #15388: vectorization support: reference init_values(i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(65,25) ]
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.333
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 9.160 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(81,9)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(85,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference constructor_3d(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.364
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(85,9)
   remark #15389: vectorization support: reference constructor_3d(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(85,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference constructor_3d(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.364
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference constructor_3d(:,:) has unaligned access
      remark #15389: vectorization support: reference df(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
      remark #15389: vectorization support: reference constructor_3d(:,:) has unaligned access
      remark #15389: vectorization support: reference df(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.310 
      remark #15478: estimated potential speedup: 10.160 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference constructor_3d(:,:) has unaligned access
      remark #15389: vectorization support: reference df(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
      remark #15389: vectorization support: reference df(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15416: vectorization support: non-unit strided store was generated for the variable <constructor_3d(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.052
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(92,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference df(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.538
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_3D_SEDOV_TAYLOR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(190,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(190,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(190,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(190,9)
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(190,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(212,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(213,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(214,17)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(219,29) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(221,29) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.358
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15457: masked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 3.930 
         remark #15478: estimated potential speedup: 3.000 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(214,17)
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(219,29) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(221,29) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15415: vectorization support: non-unit strided load was generated for the variable <parallel_params(i)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(215,29) ]
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.190
         remark #15300: LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15457: masked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 3.930 
         remark #15478: estimated potential speedup: 3.000 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(214,17)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(219,29) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(221,29) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.216
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15457: masked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 3.930 
         remark #15478: estimated potential speedup: 3.000 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_3D_SOD

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(95,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(95,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(95,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(95,9)
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(95,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(112,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(113,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(114,17)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(116,25) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(118,25) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(120,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15457: masked unaligned unit stride stores: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 3.370 
         remark #15478: estimated potential speedup: 6.590 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(114,17)
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(116,25) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(118,25) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(120,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.444
         remark #15300: LOOP WAS VECTORIZED
         remark #15457: masked unaligned unit stride stores: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 3.370 
         remark #15478: estimated potential speedup: 6.590 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(114,17)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(116,25) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(118,25) ]
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(120,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15457: masked unaligned unit stride stores: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 3.370 
         remark #15478: estimated potential speedup: 6.590 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_3D_PYRAMID

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(150,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(150,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(150,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(150,9)
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(150,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(157,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(157,9)
      remark #15389: vectorization support: reference START_INDEX(:,:) has unaligned access
      remark #15388: vectorization support: reference at (157:9) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(157,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference START_INDEX(:,:) has unaligned access
      remark #15388: vectorization support: reference at (157:9) has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.750
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 4.570 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(158,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(160,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(161,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(162,21)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(163,25) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.250
            remark #15301: PEEL LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 9.160 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(162,21)
            remark #15388: vectorization support: reference INIT_VALUES(i,j,k) has aligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(163,25) ]
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.833
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 9.160 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(162,21)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/materials_in_cells.f90(163,25) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.250
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 9.160 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_TOTAL

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(102,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(102,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(102,7)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(102,7)
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(102,7)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(106,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(107,10)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(108,13)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(110,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.274
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15455: masked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 2.750 
         remark #15478: estimated potential speedup: 4.710 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(108,13)
      <Multiversioned v1>
         remark #15388: vectorization support: reference INIT_VALUES(i,j,k) has aligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(110,19) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.591
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15455: masked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 1.370 
         remark #15478: estimated potential speedup: 9.270 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(108,13)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(110,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.773
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15455: masked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 2.750 
         remark #15478: estimated potential speedup: 4.710 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(108,13)
      <Peeled loop for vectorization, Multiversioned v2>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(110,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.192
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15455: masked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 2.750 
         remark #15478: estimated potential speedup: 4.710 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(108,13)
      <Multiversioned v2>
         remark #15388: vectorization support: reference INIT_VALUES(i,j,k) has aligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(110,19) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <MAT_CELL(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(109,20) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.227
         remark #15300: LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 1 
         remark #15455: masked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 2.750 
         remark #15478: estimated potential speedup: 4.710 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/vof.f90(108,13)
      <Remainder loop for vectorization, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^CREATE_MATERIALS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(782,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(782,9)
      remark #15389: vectorization support: reference WITNESS_INDEX(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 2.280 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(782,9)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference WITNESS_INDEX(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 2.280 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(145,9) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(1479,26)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between at (146:13) and at (150:13)
   remark #15346: vector dependence: assumed FLOW dependence between at (150:13) and at (146:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(162,9) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(1479,26)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between DENSITY_VOF(m,i,j,k) (167:29) and at (175:33)
   remark #15346: vector dependence: assumed ANTI dependence between at (175:33) and DENSITY_VOF(m,i,j,k) (167:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(163,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(1479,26)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between DENSITY_VOF(m,i,j,k) (167:29) and at (175:33)
      remark #15346: vector dependence: assumed ANTI dependence between at (175:33) and DENSITY_VOF(m,i,j,k) (167:29)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(164,17) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(1479,26)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between DENSITY_VOF(m,i,j,k) (167:29) and at (175:33)
         remark #15346: vector dependence: assumed ANTI dependence between at (175:33) and DENSITY_VOF(m,i,j,k) (167:29)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(165,21) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(1479,26)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between DENSITY_VOF(m,i,j,k) (167:29) and at (175:33)
            remark #15346: vector dependence: assumed ANTI dependence between at (175:33) and DENSITY_VOF(m,i,j,k) (167:29)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR_MATERIALS_ARR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(73,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(73,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(73,7)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(73,7)
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(73,7)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference INIT_VALUES(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(75,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(76,16)
   <Multiversioned v1>
      remark #15389: vectorization support: reference INIT_VALUES(i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(78,22) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_CELL(i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(78,45) ]
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <init_density(MAT_CELL(i,j,1))>, masked, part of index is read from memory   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(78,22) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.029
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15458: masked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 18 
      remark #15477: vector cost: 26.000 
      remark #15478: estimated potential speedup: 0.670 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(76,16)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(76,16)
   <Multiversioned v2>
      remark #15389: vectorization support: reference INIT_VALUES(i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(78,22) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_CELL(i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(77,23) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_CELL(i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(78,45) ]
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <init_density(MAT_CELL(i,j,1))>, masked, part of index is read from memory   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(78,22) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.014
      remark #15452: unmasked strided loads: 2 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15458: masked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 18 
      remark #15477: vector cost: 26.000 
      remark #15478: estimated potential speedup: 0.670 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(76,16)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(83,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(84,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(85,16)
      <Multiversioned v1>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(87,22) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_CELL(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(87,45) ]
         remark #15328: vectorization support: irregularly indexed load was emulated for the variable <init_density(MAT_CELL(i,j,k))>, masked, part of index is read from memory   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(87,22) ]
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.029
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15457: masked unaligned unit stride stores: 1 
         remark #15458: masked indexed (or gather) loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 18 
         remark #15477: vector cost: 26.000 
         remark #15478: estimated potential speedup: 0.670 
         remark #15487: type converts: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(85,16)
      <Remainder, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(85,16)
      <Multiversioned v2>
         remark #15389: vectorization support: reference INIT_VALUES(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(87,22) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_CELL(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(86,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_CELL(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(87,45) ]
         remark #15328: vectorization support: irregularly indexed load was emulated for the variable <init_density(MAT_CELL(i,j,k))>, masked, part of index is read from memory   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(87,22) ]
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.014
         remark #15452: unmasked strided loads: 2 
         remark #15457: masked unaligned unit stride stores: 1 
         remark #15458: masked indexed (or gather) loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 18 
         remark #15477: vector cost: 26.000 
         remark #15478: estimated potential speedup: 0.670 
         remark #15487: type converts: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/density.f90(85,16)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CONSTRUCTOR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(102,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(102,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(102,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(102,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(102,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(103,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(103,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(103,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(103,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(103,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(104,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(104,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(104,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(104,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(104,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(105,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(105,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(105,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(105,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(105,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(106,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(106,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(106,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(106,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(106,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(107,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference constructor(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(107,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(107,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference constructor(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(107,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <constructor(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_advect.f90(107,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^SET_COMMUNICATION

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(571,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(575,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(576,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(577,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(582,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(583,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(584,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(585,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(586,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(588,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(589,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(590,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(597,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION_MATERIAL

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(240,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(241,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(242,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(243,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(244,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(245,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(246,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(247,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material.f90(248,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION_MATERIAL_BASE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_base.f90(105,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_base.f90(107,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_base.f90(108,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_base.f90(109,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3582,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3583,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3584,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3587,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION_MATERIAL_ADVECT

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_advect.f90(147,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_advect.f90(148,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_advect.f90(149,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Material/material_advect.f90(150,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(389,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(390,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(391,12)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE..1

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(101,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(102,19)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(127,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(128,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(129,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(130,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(131,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(132,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(133,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(134,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(136,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(137,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(138,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(139,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(140,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(141,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(142,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(143,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(145,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(146,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(147,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(148,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(149,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(150,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(151,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(152,19) ]
   remark #15416: vectorization support: irregularly indexed store was generated for the variable <vol>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(154,19) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.019
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 96 
   remark #15451: unmasked unaligned unit stride stores: 16 
   remark #15462: unmasked indexed (or gather) loads: 24 
   remark #15463: unmasked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 1448 
   remark #15477: vector cost: 644.250 
   remark #15478: estimated potential speedup: 2.160 
   remark #15482: vectorized math library calls: 4 
   remark #15484: vector function calls: 8 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
   remark #15489: --- begin vector function matching report ---
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(154,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(155,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(156,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(157,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(158,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(159,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(160,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(161,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15493: --- end vector function matching report ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.046
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(121,10)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.025
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 95 
   remark #15477: vector cost: 38.250 
   remark #15478: estimated potential speedup: 2.320 
   remark #15482: vectorized math library calls: 4 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.180
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.045
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.272
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VERTEX_MASS_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VERTEX_MASS(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
         remark #15388: vectorization support: reference VERTEX_MASS(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VERTEX_MASS(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VERTEX_MASS(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VERTEX_MASS(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(186,10)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(213,49)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(192,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(196,48) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VERTEX_MASS_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.167
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
      remark #15388: vectorization support: reference VERTEX_MASS(:,:,1) has aligned access
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 6.920 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 1.167
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VERTEX_MASS(:,:,1)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 0.840 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VERTEX_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 0.970 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(101,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(104,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(105,10)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between X(i,j,1) (106:13) and VERTEX_MASS(i,j,1) (119:19)
      remark #15346: vector dependence: assumed FLOW dependence between VERTEX_MASS(i,j,1) (119:19) and X(i,j,1) (106:13)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(109,13)
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_mass.f90(105,10)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_CELL_MASS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(122,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(123,10)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between CM(i,j,k) (125:16) and VOLUME(i,j,k) (125:16)
      remark #15346: vector dependence: assumed ANTI dependence between VOLUME(i,j,k) (125:16) and CM(i,j,k) (125:16)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between CM(i,j,k) (125:16) and VOLUME(i,j,k) (125:16)
         remark #15346: vector dependence: assumed ANTI dependence between VOLUME(i,j,k) (125:16) and CM(i,j,k) (125:16)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(123,10)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between CM(i,j,k) (125:16) and RHO(i,j,k) (125:16)
         remark #15346: vector dependence: assumed ANTI dependence between RHO(i,j,k) (125:16) and CM(i,j,k) (125:16)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(122,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(123,10)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between CM(i,j,k) (125:16) and RHO(i,j,k) (125:16)
      remark #15346: vector dependence: assumed ANTI dependence between RHO(i,j,k) (125:16) and CM(i,j,k) (125:16)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between CM(i,j,k) (125:16) and RHO(i,j,k) (125:16)
         remark #15346: vector dependence: assumed ANTI dependence between RHO(i,j,k) (125:16) and CM(i,j,k) (125:16)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(123,10)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between CM(i,j,k) (125:16) and RHO(i,j,k) (125:16)
         remark #15346: vector dependence: assumed ANTI dependence between RHO(i,j,k) (125:16) and CM(i,j,k) (125:16)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_mass.f90(124,13)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(124,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(127,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (125:13) and edge (127:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (127:18) and edge (125:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(130,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(132,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (131:13) and edge (132:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (132:18) and edge (131:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(135,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(137,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (136:13) and edge (137:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (137:18) and edge (136:13)
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^CREATE_INVERSE_VERTEX_MASS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(811,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(812,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(813,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between V_MASS(i,j,k) (815:25) and I_V_MASS(i,j,k) (817:25)
         remark #15346: vector dependence: assumed FLOW dependence between I_V_MASS(i,j,k) (817:25) and V_MASS(i,j,k) (815:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(813,17)
      <Remainder, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(813,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(813,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: EXCHANGE_VIRTUAL_SPACE_BLOCKING..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^START_CALCULATION

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(703,33)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(712,38)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(732,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(732,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(732,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (732:22) has unaligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(732,22) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.533
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(732,9)
         remark #15388: vectorization support: reference at (732:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(732,22) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <at (732:9)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.176
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(732,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (732:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(732,22) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.481
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(735,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(735,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(735,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (735:22) has unaligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(735,22) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.533
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(735,9)
         remark #15388: vectorization support: reference at (735:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(735,22) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <at (735:9)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.176
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(735,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (735:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(735,22) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.481
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(738,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(738,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(738,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (738:22) has unaligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(738,22) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.533
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(738,9)
         remark #15388: vectorization support: reference at (738:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(738,22) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <at (738:9)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.176
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(738,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (738:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(738,22) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.481
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(741,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(741,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(741,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (741:22) has unaligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(741,22) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.533
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(741,9)
         remark #15388: vectorization support: reference at (741:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(741,22) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <at (741:9)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.176
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(741,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (741:22) has aligned access   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(741,22) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.481
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 7 
         remark #15477: vector cost: 4.250 
         remark #15478: estimated potential speedup: 1.530 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(639,9) inlined into /home/u175356/ScalSALE-main/src/Main/problem.f90(1433,14)
   remark #15382: vectorization support: call to function TEXTUAL_DIAGNOSTIC_MODULE^TEXTUAL_DIAGNOSTIC_CLOSE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(640,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (640:18) and at (640:18)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_THERMODYNAMICS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(482,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(483,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(486,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(487,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(488,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(489,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(490,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(491,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference SOUND_VEL(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
         remark #15388: vectorization support: reference SOUND_VEL(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference SOUND_VEL(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <SOUND_VEL(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <SOUND_VEL(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(520,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference TEMPERATURE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
         remark #15388: vectorization support: reference TEMPERATURE(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference TEMPERATURE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <TEMPERATURE(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <TEMPERATURE(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(521,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference PRESSURE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
         remark #15388: vectorization support: reference PRESSURE(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference PRESSURE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <PRESSURE(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <PRESSURE(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(522,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference DP_DRHO(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
         remark #15388: vectorization support: reference DP_DRHO(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference DP_DRHO(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <DP_DRHO(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <DP_DRHO(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(523,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference DP_DE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
         remark #15388: vectorization support: reference DP_DE(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference DP_DE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <DP_DE(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <DP_DE(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(524,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(526,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(527,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(528,17)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(529,21)
         <Multiversioned v1>
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between TEMPERATURE_VOF(tmp_mat,i,j,k) (532:29) and DP_DE_VOF(tmp_mat,i,j,k) (535:29)
            remark #15346: vector dependence: assumed OUTPUT dependence between DP_DE_VOF(tmp_mat,i,j,k) (535:29) and TEMPERATURE_VOF(tmp_mat,i,j,k) (532:29)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(529,21)
         <Remainder, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(529,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(529,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(545,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(545,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(545,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(545,9)
            remark #15389: vectorization support: reference DT_DE_TEMP(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(545,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference DT_DE_TEMP(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(561,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between TEMPERATURE(i,j,k) (566:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (572:25)
   remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (572:25) and TEMPERATURE(i,j,k) (566:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(562,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between TEMPERATURE(i,j,k) (566:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (572:25)
      remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (572:25) and TEMPERATURE(i,j,k) (566:25)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(563,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between TEMPERATURE(i,j,k) (566:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (572:25)
         remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (572:25) and TEMPERATURE(i,j,k) (566:25)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(564,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between TEMPERATURE(i,j,k) (566:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (572:25)
            remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (572:25) and TEMPERATURE(i,j,k) (566:25)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(578,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(579,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between ED_NUM(i) (121:10) and at (122:15)
   remark #15346: vector dependence: assumed FLOW dependence between at (122:15) and ED_NUM(i) (121:10)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(582,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(583,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(584,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between TEMPERATURE(i,j,k) (586:21) and DP_DE(i,j,k) (588:21)
         remark #15346: vector dependence: assumed OUTPUT dependence between DP_DE(i,j,k) (588:21) and TEMPERATURE(i,j,k) (586:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(584,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(596,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(597,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between PRESSURE_SUM(i,j,k) (599:21) and PRESSURE(i,j,k) (599:21)
      remark #15346: vector dependence: assumed ANTI dependence between PRESSURE(i,j,k) (599:21) and PRESSURE_SUM(i,j,k) (599:21)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(598,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between PRESSURE_SUM(i,j,k) (599:21) and PRESSURE(i,j,k) (599:21)
         remark #15346: vector dependence: assumed ANTI dependence between PRESSURE(i,j,k) (599:21) and PRESSURE_SUM(i,j,k) (599:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(598,17)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(597,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(598,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between PRESSURE_SUM(i,j,k) (599:21) and PRESSURE(i,j,k) (599:21)
         remark #15346: vector dependence: assumed ANTI dependence between PRESSURE(i,j,k) (599:21) and PRESSURE_SUM(i,j,k) (599:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(598,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(613,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between ED_NUM(i) (121:10) and at (122:15)
   remark #15346: vector dependence: assumed FLOW dependence between at (122:15) and ED_NUM(i) (121:10)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(614,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between ED_NUM(i) (121:10) and at (122:15)
   remark #15346: vector dependence: assumed FLOW dependence between at (122:15) and ED_NUM(i) (121:10)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(639,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: EXCHANGE_END

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (343:22) and at (343:22)
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(105,7)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(107,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (106:10) and edge (107:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (107:15) and edge (106:10)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(111,15)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(113,15)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (121:10) and edge (122:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (122:15) and edge (121:10)
LOOP END
===========================================================================

Begin optimization report for: APPLY_EOS..1

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(222,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.210 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15416: vectorization support: non-unit strided store was generated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_REZONE_CONSTRAINT_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(399,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between dx(1) (404:19) and dx(ii) (445:19)
   remark #15346: vector dependence: assumed ANTI dependence between dx(ii) (445:19) and dx(1) (404:19)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(400,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between dx(1) (404:19) and dx(ii) (445:19)
      remark #15346: vector dependence: assumed ANTI dependence between dx(ii) (445:19) and dx(1) (404:19)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(444,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between vel_rez_max (447:35) and vel_rez_max (448:22)
         remark #15346: vector dependence: assumed FLOW dependence between vel_rez_max (448:22) and vel_rez_max (447:35)
         remark #15346: vector dependence: assumed FLOW dependence between vel_rez_max (448:22) and vel_rez_max (447:35)
         remark #15346: vector dependence: assumed ANTI dependence between vel_rez_max (447:35) and vel_rez_max (448:22)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_REZONE_CONSTRAINT_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(527,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(528,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(529,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between vel_rez_max (608:32) and vel_rez_max (609:19)
         remark #15346: vector dependence: assumed FLOW dependence between vel_rez_max (609:19) and vel_rez_max (608:32)
         remark #15346: vector dependence: assumed FLOW dependence between vel_rez_max (609:19) and vel_rez_max (608:32)
         remark #15346: vector dependence: assumed ANTI dependence between vel_rez_max (608:32) and vel_rez_max (609:19)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VEL_GRAD_DT_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(320,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between this%I_GRAD (350:19) and this%I_GRAD (350:19)
   remark #15346: vector dependence: assumed OUTPUT dependence between this%I_GRAD (350:19) and this%I_GRAD (350:19)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(321,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between this%I_GRAD (350:19) and this%I_GRAD (350:19)
      remark #15346: vector dependence: assumed OUTPUT dependence between this%I_GRAD (350:19) and this%I_GRAD (350:19)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(322,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between vel_grad_max (347:29) and vel_grad_max (349:19)
         remark #15346: vector dependence: assumed FLOW dependence between vel_grad_max (349:19) and vel_grad_max (347:29)
         remark #15346: vector dependence: assumed FLOW dependence between vel_grad_max (349:19) and vel_grad_max (347:29)
         remark #15346: vector dependence: assumed ANTI dependence between vel_grad_max (347:29) and vel_grad_max (349:19)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VEL_GRAD_DT_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(260,7)
   remark #15382: vectorization support: call to function DISTANCE_2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Time_step/time.f90(265,31) ]
   remark #15382: vectorization support: call to function DISTANCE_2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Time_step/time.f90(266,31) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between Y(i+1,j,1) (265:31) and Y(i,j+1,1) (266:31)
   remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j+1,1) (266:31) and Y(i+1,j,1) (265:31)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/time.f90(261,10)
      remark #15382: vectorization support: call to function DISTANCE_2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Time_step/time.f90(265,31) ]
      remark #15382: vectorization support: call to function DISTANCE_2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Time_step/time.f90(266,31) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ACCELERATION_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(815,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between X(i+1,j,k) (825:21) and ACCELERATION_Z(i,j,k) (867:21)
   remark #15346: vector dependence: assumed FLOW dependence between ACCELERATION_Z(i,j,k) (867:21) and X(i+1,j,k) (825:21)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(816,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between X(i+1,j,k) (825:21) and ACCELERATION_Z(i,j,k) (867:21)
      remark #15346: vector dependence: assumed FLOW dependence between ACCELERATION_Z(i,j,k) (867:21) and X(i+1,j,k) (825:21)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(817,17)
      <Peeled>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between X(i+1,j,k) (825:21) and ACCELERATION_Z(i,j,k) (867:21)
         remark #15346: vector dependence: assumed FLOW dependence between ACCELERATION_Z(i,j,k) (867:21) and X(i+1,j,k) (825:21)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY..1

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(124,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(127,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (125:13) and edge (127:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (127:18) and edge (125:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(130,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(132,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (131:13) and edge (132:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (132:18) and edge (131:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(135,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(137,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (136:13) and edge (137:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (137:18) and edge (136:13)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_DERIVATIVES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(226,7)
   remark #15316: simd loop was not vectorized: scalar assignment in simd loop is prohibited, consider private, lastprivate or reduction clauses   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(237,21) ]
   remark #15552: loop was not vectorized with "simd"
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ARTIFICIAL_VISCOSITY_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(120,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(121,17) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between at (123:25) and at (123:25)
      remark #15346: vector dependence: assumed ANTI dependence between at (123:25) and at (123:25)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between at (123:25) and at (123:25)
         remark #15346: vector dependence: assumed ANTI dependence between at (123:25) and at (123:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(121,17) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between at (123:25) and at (123:25)
         remark #15346: vector dependence: assumed FLOW dependence between at (123:25) and at (123:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1129,14)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1163,14)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (343:22) and at (343:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1165,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1166,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1167,17)
         remark #15382: vectorization support: call to function LINE_LENGTH_IN_CELL cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1234,42) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between ACCELERATION_X(i,j,k) (1175:25) and A_VISC(i,j,k) (1169:25)
         remark #15346: vector dependence: assumed FLOW dependence between A_VISC(i,j,k) (1169:25) and ACCELERATION_X(i,j,k) (1175:25)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1279,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VELOCITY_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1395,14)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (343:22) and at (343:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1396,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between X(i+1,j,k) (1406:21) and VELOCITY_Z(i,j,k) (1451:21)
   remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Z(i,j,k) (1451:21) and X(i+1,j,k) (1406:21)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1397,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between X(i+1,j,k) (1406:21) and VELOCITY_Z(i,j,k) (1451:21)
      remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Z(i,j,k) (1451:21) and X(i+1,j,k) (1406:21)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1398,17)
      <Peeled>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between X(i+1,j,k) (1406:21) and VELOCITY_Z(i,j,k) (1451:21)
         remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Z(i,j,k) (1451:21) and X(i+1,j,k) (1406:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1479,18)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (343:22) and at (343:22)
LOOP END
===========================================================================

Begin optimization report for: IMPOSE_SPHERICAL_SYMMETRY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(484,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(484,18)
      remark #15389: vectorization support: reference VEL_RADIAL_VEC(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(484,18)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference VEL_RADIAL_VEC(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(485,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(485,18)
      remark #15389: vectorization support: reference INDEX_VERTEX_VEC(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 2.280 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(485,18)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference INDEX_VERTEX_VEC(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 2.280 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(488,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(490,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(491,17)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(492,29) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,80) ]
         remark #15389: vectorization support: reference VELOCITY_Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(493,29) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(496,80) ]
         remark #15389: vectorization support: reference VELOCITY_Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(494,29) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(497,80) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,68) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,79) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,90) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,99) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,110) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,121) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.405
         remark #15355: vectorization support: VEL_RADIAL_VEC(k1) is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,25) ]
         remark #15355: vectorization support: INDEX_VERTEX_VEC(k1) is int type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(500,25) ]
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 12 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 58 
         remark #15477: vector cost: 32.870 
         remark #15478: estimated potential speedup: 1.680 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(491,17)
         remark #15389: vectorization support: reference VELOCITY_X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(492,29) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,80) ]
         remark #15389: vectorization support: reference VELOCITY_Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(493,29) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(496,80) ]
         remark #15389: vectorization support: reference VELOCITY_Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(494,29) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(497,80) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,68) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,79) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,90) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,99) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,110) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,121) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.604
         remark #15355: vectorization support: VEL_RADIAL_VEC(k1) is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,25) ]
         remark #15355: vectorization support: INDEX_VERTEX_VEC(k1) is int type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(500,25) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 6 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 58 
         remark #15477: vector cost: 8.680 
         remark #15478: estimated potential speedup: 5.530 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(491,17)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(492,29) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,80) ]
         remark #15389: vectorization support: reference VELOCITY_Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(493,29) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(496,80) ]
         remark #15389: vectorization support: reference VELOCITY_Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(494,29) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(497,80) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,68) ]
         remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,79) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,90) ]
         remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,99) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,110) ]
         remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,121) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.405
         remark #15355: vectorization support: VEL_RADIAL_VEC(k1) is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,25) ]
         remark #15355: vectorization support: INDEX_VERTEX_VEC(k1) is int type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(500,25) ]
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 12 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 58 
         remark #15477: vector cost: 32.870 
         remark #15478: estimated potential speedup: 1.680 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(490,13)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(491,17)
         remark #15415: vectorization support: non-unit strided load was generated for the variable <VELOCITY_X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(492,29) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,80) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <VELOCITY_Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(493,29) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(496,80) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <VELOCITY_Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(494,29) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(497,80) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,68) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,79) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,90) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,99) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,110) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(498,121) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.190
         remark #15355: vectorization support: VEL_RADIAL_VEC(k1) is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,25) ]
         remark #15355: vectorization support: INDEX_VERTEX_VEC(k1) is int type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(500,25) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 12 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 58 
         remark #15477: vector cost: 32.870 
         remark #15478: estimated potential speedup: 1.680 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(491,17)
      <Remainder loop for vectorization>
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.041
         remark #15355: vectorization support: VEL_RADIAL_VEC(k1) is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(495,25) ]
         remark #15355: vectorization support: INDEX_VERTEX_VEC(k1) is int type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(500,25) ]
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 12 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 58 
         remark #15477: vector cost: 32.870 
         remark #15478: estimated potential speedup: 1.680 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(506,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(510,17)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,k) (512:25) and VELOCITY_Z(i,j,k) (514:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Z(i,j,k) (514:25) and VELOCITY_X(i,j,k) (512:25)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(511,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,k) (512:25) and VELOCITY_Z(i,j,k) (514:25)
         remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Z(i,j,k) (514:25) and VELOCITY_X(i,j,k) (512:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(511,21)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(510,17)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(511,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,k) (512:25) and VELOCITY_Z(i,j,k) (514:25)
         remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Z(i,j,k) (514:25) and VELOCITY_X(i,j,k) (512:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(511,21)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: IMPOSE_NO_MOVE_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(551,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(552,13)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VELOCITY_X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(553,27) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,34) ]
      remark #15389: vectorization support: reference VELOCITY_Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(554,27) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,55) ]
      remark #15389: vectorization support: reference VELOCITY_Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(555,27) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,75) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,26) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,35) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,46) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,55) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,66) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,75) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.655
      remark #15355: vectorization support: radial_vel is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(546,9) ]
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 12 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 60 
      remark #15477: vector cost: 32.250 
      remark #15478: estimated potential speedup: 1.780 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(552,13)
      remark #15389: vectorization support: reference VELOCITY_X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(553,27) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,34) ]
      remark #15389: vectorization support: reference VELOCITY_Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(554,27) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,55) ]
      remark #15389: vectorization support: reference VELOCITY_Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(555,27) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,75) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,26) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,35) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,46) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,55) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,66) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,75) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.746
      remark #15355: vectorization support: radial_vel is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(546,9) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 6 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 60 
      remark #15477: vector cost: 8.370 
      remark #15478: estimated potential speedup: 6.590 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(552,13)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VELOCITY_X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(553,27) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,34) ]
      remark #15389: vectorization support: reference VELOCITY_Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(554,27) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,55) ]
      remark #15389: vectorization support: reference VELOCITY_Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(555,27) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,75) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,26) ]
      remark #15389: vectorization support: reference X(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,35) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,46) ]
      remark #15389: vectorization support: reference Y(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,55) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,66) ]
      remark #15389: vectorization support: reference Z(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,75) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.655
      remark #15355: vectorization support: radial_vel is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(546,9) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 12 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 60 
      remark #15477: vector cost: 32.250 
      remark #15478: estimated potential speedup: 1.780 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(551,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(552,13)
      remark #15415: vectorization support: non-unit strided load was generated for the variable <VELOCITY_X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(553,27) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,34) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <VELOCITY_Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(554,27) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,55) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <VELOCITY_Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(555,27) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(556,75) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,26) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <X(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,35) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,46) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <Y(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,55) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,66) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <Z(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(557,75) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.097
      remark #15355: vectorization support: radial_vel is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(546,9) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 12 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 60 
      remark #15477: vector cost: 32.250 
      remark #15478: estimated potential speedup: 1.780 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(552,13)
   <Remainder loop for vectorization>
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.125
      remark #15355: vectorization support: radial_vel is double type reduction   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(546,9) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 12 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 60 
      remark #15477: vector cost: 32.250 
      remark #15478: estimated potential speedup: 1.780 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(567,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,k) (569:17) and VELOCITY_Z(i,j,k) (571:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Z(i,j,k) (571:17) and VELOCITY_X(i,j,k) (569:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(568,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,k) (569:17) and VELOCITY_Z(i,j,k) (571:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Z(i,j,k) (571:17) and VELOCITY_X(i,j,k) (569:17)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(568,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(567,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(568,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,k) (569:17) and VELOCITY_Z(i,j,k) (571:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Z(i,j,k) (571:17) and VELOCITY_X(i,j,k) (569:17)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/velocity.f90(568,13)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_REZONE_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(252,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(253,10)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between MATERIAL_X(i,j,k) (255:16) and MATERIAL_Z(i,j,k) (257:16)
      remark #15346: vector dependence: assumed OUTPUT dependence between MATERIAL_Z(i,j,k) (257:16) and MATERIAL_X(i,j,k) (255:16)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(254,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MATERIAL_X(i,j,k) (255:16) and MATERIAL_Z(i,j,k) (257:16)
         remark #15346: vector dependence: assumed OUTPUT dependence between MATERIAL_Z(i,j,k) (257:16) and MATERIAL_X(i,j,k) (255:16)
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(253,10)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(254,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MATERIAL_X(i,j,k) (255:16) and MATERIAL_Z(i,j,k) (257:16)
         remark #15346: vector dependence: assumed OUTPUT dependence between MATERIAL_Z(i,j,k) (257:16) and MATERIAL_X(i,j,k) (255:16)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(263,12)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(270,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(271,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(272,13)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between VELOCITY_Z(i,j,k) (273:16) and VELOCITY_Y(i,j,k) (280:19)
         remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Y(i,j,k) (280:19) and VELOCITY_Z(i,j,k) (273:16)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(272,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(291,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(292,16)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_X(i,j,k) (294:22) and MESH_VELOCITY_Z(i,j,k) (296:22)
      remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_Z(i,j,k) (296:22) and MESH_VELOCITY_X(i,j,k) (294:22)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(293,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_X(i,j,k) (294:22) and MESH_VELOCITY_Z(i,j,k) (296:22)
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_Z(i,j,k) (296:22) and MESH_VELOCITY_X(i,j,k) (294:22)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(293,19)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(292,16)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(293,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_X(i,j,k) (294:22) and MESH_VELOCITY_Z(i,j,k) (296:22)
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_Z(i,j,k) (296:22) and MESH_VELOCITY_X(i,j,k) (294:22)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(293,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(302,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(303,16)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_X(i,j,k) (305:22) and MESH_VELOCITY_Z(i,j,k) (307:22)
      remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_Z(i,j,k) (307:22) and MESH_VELOCITY_X(i,j,k) (305:22)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(304,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_X(i,j,k) (305:22) and MESH_VELOCITY_Z(i,j,k) (307:22)
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_Z(i,j,k) (307:22) and MESH_VELOCITY_X(i,j,k) (305:22)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(304,19)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(303,16)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(304,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_X(i,j,k) (305:22) and MESH_VELOCITY_Z(i,j,k) (307:22)
         remark #15346: vector dependence: assumed OUTPUT dependence between MESH_VELOCITY_Z(i,j,k) (307:22) and MESH_VELOCITY_X(i,j,k) (305:22)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(304,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(317,12)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (343:22) and at (343:22)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ENERGY_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1797,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between at (1802:42) and SIE(i,j,k) (1850:29)
   remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (1850:29) and at (1802:42)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1798,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between at (1802:42) and SIE(i,j,k) (1850:29)
      remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (1850:29) and at (1802:42)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1799,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between at (1802:42) and SIE(i,j,k) (1850:29)
         remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (1850:29) and at (1802:42)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1800,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between at (1802:42) and SIE(i,j,k) (1850:29)
            remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (1850:29) and at (1802:42)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1857,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (326:22) and at (326:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1859,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (326:22) and at (326:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (326:22) and at (326:22)
LOOP END
===========================================================================

Begin optimization report for: FIX_VOF_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2055,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2055,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2055,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2055,9)
            remark #15389: vectorization support: reference VOF_SUM_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2055,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference VOF_SUM_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2056,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2056,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2056,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2056,9)
            remark #15389: vectorization support: reference VOF_MAX_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2056,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference VOF_MAX_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2057,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2057,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2057,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2057,9)
            remark #15389: vectorization support: reference SIE_VOF_SUM_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2057,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference SIE_VOF_SUM_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2058,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2058,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2058,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2058,9)
            remark #15389: vectorization support: reference CELL_MASS_VOF_SUM_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2058,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference CELL_MASS_VOF_SUM_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2059,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2059,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2059,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2059,9)
            remark #15389: vectorization support: reference MAT_VOF_MAX_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 2 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 2.280 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2059,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference MAT_VOF_MAX_ARR(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 4
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 2 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 2.280 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2128,6)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (343:22) and at (343:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2129,6)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (343:22) and at (343:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2136,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (121:10) and edge (122:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (122:15) and edge (121:10)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_MESH_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2334,14)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (343:22) and at (343:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(342,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2335,18)
   remark #15382: vectorization support: call to function EXCHANGE_END cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(343,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (343:22) and at (343:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (343:22) and at (343:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2337,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (121:10) and edge (122:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (122:15) and edge (121:10)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2346,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (121:10) and edge (122:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (122:15) and edge (121:10)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(122,10)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (124:16) and Y(i,j,1) (125:16)
   remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j,1) (125:16) and X(i,j,1) (124:16)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (124:16) and Y(i,j,1) (125:16)
      remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j,1) (125:16) and X(i,j,1) (124:16)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(122,10)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (124:16) and Y(i,j,1) (125:16)
      remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j,1) (125:16) and X(i,j,1) (124:16)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(137,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(138,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,k) (140:19) and Z(i,j,k) (142:19)
      remark #15346: vector dependence: assumed OUTPUT dependence between Z(i,j,k) (142:19) and X(i,j,k) (140:19)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(139,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,k) (140:19) and Z(i,j,k) (142:19)
         remark #15346: vector dependence: assumed OUTPUT dependence between Z(i,j,k) (142:19) and X(i,j,k) (140:19)
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(138,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(139,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,k) (140:19) and Z(i,j,k) (142:19)
         remark #15346: vector dependence: assumed OUTPUT dependence between Z(i,j,k) (142:19) and X(i,j,k) (140:19)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ADVECT_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2439,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2440,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2441,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2442,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2445,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VOF_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
      <Multiversioned v1>
         remark #15388: vectorization support: reference VOF_ADV(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VOF_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VOF_ADV(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2449,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
      <Multiversioned v1>
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference MAT_VOF_ADV(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 6.000 
            remark #15478: estimated potential speedup: 0.650 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
            remark #15388: vectorization support: reference MAT_VOF_ADV(:,:,:,:) has aligned access
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.667
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 6.920 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference MAT_VOF_ADV(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 6.000 
            remark #15478: estimated potential speedup: 0.650 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_VOF_ADV(:,:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.083
         remark #15355: vectorization support: at (2450:9) is int64 type reduction
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 6.000 
         remark #15478: estimated potential speedup: 0.650 
         remark #15488: --- end vector cost summary ---

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_VOF_ADV(:,:,:,:)>, stride is unknown to compiler
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 4
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 0.970 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2450,9)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2453,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2454,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2455,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2458:25) and SIE_VOF_ADV(tmp_mat,i,j,k) (2460:25)
         remark #15346: vector dependence: assumed OUTPUT dependence between SIE_VOF_ADV(tmp_mat,i,j,k) (2460:25) and INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2458:25)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2456,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2458:25) and SIE_VOF_ADV(tmp_mat,i,j,k) (2460:25)
            remark #15346: vector dependence: assumed OUTPUT dependence between SIE_VOF_ADV(tmp_mat,i,j,k) (2460:25) and INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2458:25)
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2455,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2456,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2458:25) and SIE_VOF_ADV(tmp_mat,i,j,k) (2460:25)
            remark #15346: vector dependence: assumed OUTPUT dependence between SIE_VOF_ADV(tmp_mat,i,j,k) (2460:25) and INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2458:25)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2470,26)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2467,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2468,17)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2479,21)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2547,25)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2549,33) ]
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2563,29)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2565,37) ]
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2579,29)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2581,37) ]
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2595,29)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2597,37) ]
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Multiversioned v1>
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed ANTI dependence between this%ADV_MATS(tmp_mat) (2701:33) and MAT_VOF_ADV(tmp_mat,i_face,j_face,k_face) (2705:37)
               remark #15346: vector dependence: assumed FLOW dependence between MAT_VOF_ADV(tmp_mat,i_face,j_face,k_face) (2705:37) and this%ADV_MATS(tmp_mat) (2701:33)
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Remainder, Multiversioned v1>
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Multiversioned v1>
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed ANTI dependence between this%ADV_MATS(tmp_mat) (2701:33) and MAT_VOF_ADV(tmp_mat,i,j,k) (2702:33)
               remark #15346: vector dependence: assumed FLOW dependence between MAT_VOF_ADV(tmp_mat,i,j,k) (2702:33) and this%ADV_MATS(tmp_mat) (2701:33)
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Remainder, Multiversioned v1>
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Multiversioned v2>
               remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Remainder, Multiversioned v2>
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Multiversioned v2>
               remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2700,29)
            <Remainder, Multiversioned v2>
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2709,29)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed ANTI dependence between this%ADV_MATS(tmp_mat) (2710:33) and INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2755:33)
               remark #15346: vector dependence: assumed FLOW dependence between INIT_MAT_LAYERS_ADV(tmp_mat,i,j,k) (2755:33) and this%ADV_MATS(tmp_mat) (2710:33)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2771,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2771,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2771,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2771,9)
            remark #15389: vectorization support: reference VOF_CORRECTION(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2771,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference VOF_CORRECTION(:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 1.710 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2772,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between j (2773:13) and j (2790:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between j (2790:13) and j (2773:13)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2773,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between i (2774:17) and i (2789:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between i (2789:17) and i (2774:17)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2774,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between MAT_VOF(tmp_mat,i,j,k) (2777:25) and INIT_MAT_LAYERS(tmp_mat,i,j,k) (2786:29)
         remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS(tmp_mat,i,j,k) (2786:29) and MAT_VOF(tmp_mat,i,j,k) (2777:25)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2775,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between MAT_VOF(tmp_mat,i,j,k) (2777:25) and INIT_MAT_LAYERS(tmp_mat,i,j,k) (2786:29)
            remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS(tmp_mat,i,j,k) (2786:29) and MAT_VOF(tmp_mat,i,j,k) (2777:25)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2793,9)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2794,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2795,17)
      <Distributed chunk1>
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2796,21)
         <Peeled loop for vectorization, Multiversioned v1>
            remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,29) ]
            remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,56) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 0.310
            remark #15301: PEEL LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15452: unmasked strided loads: 1 
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 34 
            remark #15477: vector cost: 5.000 
            remark #15478: estimated potential speedup: 6.600 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2796,21)
         <Multiversioned v1>
            remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,k) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,29) ]
            remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,k) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,56) ]
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.100
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 34 
            remark #15477: vector cost: 0.620 
            remark #15478: estimated potential speedup: 48.340 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2796,21)
         <Remainder loop for vectorization, Multiversioned v1>
            remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,29) ]
            remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,56) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15452: unmasked strided loads: 1 
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 34 
            remark #15477: vector cost: 5.000 
            remark #15478: estimated potential speedup: 6.600 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2796,21)
         <Multiversioned v2>
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_VOF(tmp_mat,i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,29) ]
            remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_VOF(tmp_mat,i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2800,56) ]
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 4
            remark #15309: vectorization support: normalized vectorization overhead 0.125
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15452: unmasked strided loads: 1 
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 34 
            remark #15477: vector cost: 5.000 
            remark #15478: estimated potential speedup: 6.600 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2796,21)
         <Remainder loop for vectorization, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VOF(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
         remark #15388: vectorization support: reference VOF(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VOF(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VOF(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VOF(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2807,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MAT_ID(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
         remark #15388: vectorization support: reference MAT_ID(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MAT_ID(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_ID(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_ID(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2808,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference CELL_MASS(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
         remark #15388: vectorization support: reference CELL_MASS(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference CELL_MASS(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <CELL_MASS(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <CELL_MASS(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2809,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference SIE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
         remark #15388: vectorization support: reference SIE(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference SIE(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <SIE(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <SIE(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2810,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference N_MATERIALS_IN_CELL(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
         remark #15388: vectorization support: reference N_MATERIALS_IN_CELL(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference N_MATERIALS_IN_CELL(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <N_MATERIALS_IN_CELL(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <N_MATERIALS_IN_CELL(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2811,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2812,9)
<Distributed chunk1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between j (2813:13) and j (2831:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between j (2831:13) and j (2813:13)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2813,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between i (2814:17) and i (2830:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between i (2830:17) and i (2814:17)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2814,17)
      <Distributed chunk1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (2822:29) and MAT_VOF(tmp_mat,i,j,k) (2820:29)
         remark #15346: vector dependence: assumed OUTPUT dependence between MAT_VOF(tmp_mat,i,j,k) (2820:29) and CELL_MASS_VOF(tmp_mat,i,j,k) (2822:29)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2815,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (2822:29) and MAT_VOF(tmp_mat,i,j,k) (2820:29)
            remark #15346: vector dependence: assumed OUTPUT dependence between MAT_VOF(tmp_mat,i,j,k) (2820:29) and CELL_MASS_VOF(tmp_mat,i,j,k) (2822:29)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2834,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2835,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between i (2836:17) and i (2838:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between i (2838:17) and i (2836:17)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2836,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (2837:56) and CELL_MASS(i,j,k) (2837:56)
         remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (2837:56) and SIE(i,j,k) (2837:56)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2836,17)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2835,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2836,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (2837:56) and CELL_MASS(i,j,k) (2837:56)
         remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (2837:56) and SIE(i,j,k) (2837:56)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2836,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2846,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2848,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2850,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2851,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2852,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between this(i,j,k) (2856:21) and DENSITY(i,j,k) (2856:21)
         remark #15346: vector dependence: assumed ANTI dependence between DENSITY(i,j,k) (2856:21) and this(i,j,k) (2856:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2852,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      <Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      <Peeled loop for vectorization, Multiversioned v2>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      <Multiversioned v2>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2865,9)
      <Remainder loop for vectorization, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      <Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      <Peeled loop for vectorization, Multiversioned v2>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      <Multiversioned v2>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2866,9)
      <Remainder loop for vectorization, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Z(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      <Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Z(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Z(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      <Peeled loop for vectorization, Multiversioned v2>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      <Multiversioned v2>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_Z(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2867,9)
      <Remainder loop for vectorization, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2871,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2872,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2873,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2880,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2937,29)
               remark #15388: vectorization support: reference tet_vol(:) has aligned access
               remark #15305: vectorization support: vector length 4
               remark #15427: loop was completely unrolled
               remark #15300: LOOP WAS VECTORIZED
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 3 
               remark #15477: vector cost: 0.750 
               remark #15478: estimated potential speedup: 4.000 
               remark #15488: --- end vector cost summary ---
            LOOP END
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2878,21)
            remark #15388: vectorization support: reference tet_vol(:) has aligned access
            remark #15305: vectorization support: vector length 4
            remark #15427: loop was completely unrolled
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.750 
            remark #15478: estimated potential speedup: 4.000 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3033,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_X_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3034,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Y_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Z(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
         remark #15389: vectorization support: reference VELOCITY_Z(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Z(:,:,:) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VELOCITY_Z(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3035,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VELOCITY_Z_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3037,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3038,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between i (3039:17) and i (3049:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between i (3049:17) and i (3039:17)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3039,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between VELOCITY_Z(i,j,k) (3040:21) and VELOCITY_Y(i,j,k) (3046:25)
         remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Y(i,j,k) (3046:25) and VELOCITY_Z(i,j,k) (3040:21)
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3038,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3039,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between VELOCITY_X(i,j,k) (3040:21) and VELOCITY_Z(i,j,k) (3047:25)
         remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Z(i,j,k) (3047:25) and VELOCITY_X(i,j,k) (3040:21)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: VOLUME_MATERIAL_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1336,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between this%ADV_MATS(ii) (1337:13) and this%ADV_MATS(ii) (1339:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between this%ADV_MATS(ii) (1339:13) and this%ADV_MATS(ii) (1337:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1336,9)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1336,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1336,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1380,9)
   remark #15382: vectorization support: call to function VOLUME_FRACTION_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1392,21) ]
   remark #15382: vectorization support: call to function VOLUME_FRACTION_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1396,21) ]
   remark #15382: vectorization support: call to function VOLUME_FRACTION_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1400,21) ]
   remark #15382: vectorization support: call to function VOLUME_FRACTION_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1404,21) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between MAT_VOF(ii,itd,jtd,k_donner) (1387:21) and this%ADV_MATS(ii) (1447:17)
   remark #15346: vector dependence: assumed FLOW dependence between this%ADV_MATS(ii) (1447:17) and MAT_VOF(ii,itd,jtd,k_donner) (1387:21)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1458,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference this%ADV_MATS(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.152
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.870 
      remark #15478: estimated potential speedup: 1.690 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Multiversioned v1>
      remark #15389: vectorization support: reference this%ADV_MATS(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.111
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 10.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference this%ADV_MATS(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.552
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.870 
      remark #15478: estimated potential speedup: 1.690 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference this%ADV_MATS(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.152
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.870 
      remark #15478: estimated potential speedup: 1.690 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Multiversioned v1>
      remark #15389: vectorization support: reference this%ADV_MATS(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.111
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 10.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference this%ADV_MATS(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.552
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.870 
      remark #15478: estimated potential speedup: 1.690 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Multiversioned v2>
      remark #15416: vectorization support: non-unit strided store was generated for the variable <this%ADV_MATS(:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 16
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.870 
      remark #15478: estimated potential speedup: 1.690 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Multiversioned v2>
      remark #15416: vectorization support: non-unit strided store was generated for the variable <this%ADV_MATS(:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 16
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.870 
      remark #15478: estimated potential speedup: 1.690 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1459,17)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: LINE_CALC_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3157,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3158,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3159,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3170,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,54)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3378,29)
               <Multiversioned v1>
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3379,33)
                     remark #15389: vectorization support: reference Z_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,54) ]
                     remark #15389: vectorization support: reference X_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,106) ]
                     remark #15389: vectorization support: reference Y_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3381,62) ]
                     remark #15389: vectorization support: reference Z_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,54) ]
                     remark #15389: vectorization support: reference X_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,107) ]
                     remark #15389: vectorization support: reference Y_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3383,62) ]
                     remark #15381: vectorization support: unaligned access used inside loop body
                     remark #15305: vectorization support: vector length 2
                     remark #15427: loop was completely unrolled
                     remark #15309: vectorization support: normalized vectorization overhead 1.219
                     remark #15355: vectorization support: cmax is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,37) ]
                     remark #15355: vectorization support: cmin is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,37) ]
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 3 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 36 
                     remark #15477: vector cost: 16.000 
                     remark #15478: estimated potential speedup: 1.010 
                     remark #15488: --- end vector cost summary ---
                  LOOP END
               LOOP END

               LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3378,29)
               <Multiversioned v2>
                  remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

                  LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3379,33)
                     remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Z_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,54) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <X_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,106) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Y_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3381,62) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Z_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,54) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <X_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,107) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Y_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3383,62) ]
                     remark #15305: vectorization support: vector length 2
                     remark #15427: loop was completely unrolled
                     remark #15309: vectorization support: normalized vectorization overhead 0.789
                     remark #15355: vectorization support: cmax is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,37) ]
                     remark #15355: vectorization support: cmin is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,37) ]
                     remark #15452: unmasked strided loads: 6 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 36 
                     remark #15477: vector cost: 19.000 
                     remark #15478: estimated potential speedup: 1.050 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3379,33)
                  LOOP END
               LOOP END
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3393,25)
               remark #15523: loop was not vectorized: loop control variable nnii was found, but loop iteration count cannot be computed before executing the loop
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3451,29)
               remark #15523: loop was not vectorized: loop control variable nnii was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3170,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,54)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3378,29)
               <Multiversioned v1>
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3379,33)
                     remark #15389: vectorization support: reference Z_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,54) ]
                     remark #15389: vectorization support: reference X_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,106) ]
                     remark #15389: vectorization support: reference Y_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3381,62) ]
                     remark #15389: vectorization support: reference Z_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,54) ]
                     remark #15389: vectorization support: reference X_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,107) ]
                     remark #15389: vectorization support: reference Y_LAG(i+ii,j+jj,k+kk) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3383,62) ]
                     remark #15381: vectorization support: unaligned access used inside loop body
                     remark #15305: vectorization support: vector length 2
                     remark #15427: loop was completely unrolled
                     remark #15309: vectorization support: normalized vectorization overhead 1.219
                     remark #15355: vectorization support: cmax is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,37) ]
                     remark #15355: vectorization support: cmin is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,37) ]
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 3 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 36 
                     remark #15477: vector cost: 16.000 
                     remark #15478: estimated potential speedup: 1.010 
                     remark #15488: --- end vector cost summary ---
                  LOOP END
               LOOP END

               LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3378,29)
               <Multiversioned v2>
                  remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

                  LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3379,33)
                     remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Z_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,54) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <X_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,106) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Y_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3381,62) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Z_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,54) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <X_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,107) ]
                     remark #15328: vectorization support: non-unit strided load was emulated for the variable <Y_LAG(i+ii,j+jj,k+kk)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3383,62) ]
                     remark #15305: vectorization support: vector length 2
                     remark #15427: loop was completely unrolled
                     remark #15309: vectorization support: normalized vectorization overhead 0.789
                     remark #15355: vectorization support: cmax is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3380,37) ]
                     remark #15355: vectorization support: cmin is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3382,37) ]
                     remark #15452: unmasked strided loads: 6 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 36 
                     remark #15477: vector cost: 19.000 
                     remark #15478: estimated potential speedup: 1.050 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3379,33)
                  LOOP END
               LOOP END
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3393,25)
               remark #15523: loop was not vectorized: loop control variable nnii was found, but loop iteration count cannot be computed before executing the loop
            LOOP END

            LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(3451,29)
               remark #15523: loop was not vectorized: loop control variable nnii was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: APPLY_WILKINS_MASS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15389: vectorization support: reference CELL_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15389: vectorization support: reference CELL_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15389: vectorization support: reference CELL_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <CELL_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference PREV_CELL_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
      remark #15389: vectorization support: reference PREV_CELL_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference PREV_CELL_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <PREV_CELL_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2378,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2378:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VERTEX_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference PREV_VERTEX_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
      remark #15389: vectorization support: reference PREV_VERTEX_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference PREV_VERTEX_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <PREV_VERTEX_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2379,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2379:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2384,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ACCELERATION_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(750,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between R_FACTOR(i,j,1) (752:17) and ACCELERATION_Y(i,j,1) (762:17)
   remark #15346: vector dependence: assumed FLOW dependence between ACCELERATION_Y(i,j,1) (762:17) and R_FACTOR(i,j,1) (752:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(751,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between R_FACTOR(i,j,1) (752:17) and ACCELERATION_Y(i,j,1) (762:17)
      remark #15346: vector dependence: assumed FLOW dependence between ACCELERATION_Y(i,j,1) (762:17) and R_FACTOR(i,j,1) (752:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(750,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(751,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between R_FACTOR(i,j,1) (752:17) and ACCELERATION_Y(i,j,1) (762:17)
      remark #15346: vector dependence: assumed FLOW dependence between ACCELERATION_Y(i,j,1) (762:17) and R_FACTOR(i,j,1) (752:17)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ARTIFICIAL_VISCOSITY_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(960,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(961,13)
      remark #15382: vectorization support: call to function QUAD_AREA cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(986,28) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between x1 (966:21) and x1 (986:28)
      remark #15346: vector dependence: assumed OUTPUT dependence between x1 (986:28) and x1 (966:21)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1057,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VELOCITY_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1317,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between R_FACTOR(i,j,1) (1320:17) and VELOCITY_Y(i,j,1) (1335:17)
   remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Y(i,j,1) (1335:17) and R_FACTOR(i,j,1) (1320:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1318,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between R_FACTOR(i,j,1) (1320:17) and VELOCITY_Y(i,j,1) (1335:17)
      remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Y(i,j,1) (1335:17) and R_FACTOR(i,j,1) (1320:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1317,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1318,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between R_FACTOR(i,j,1) (1320:17) and VELOCITY_Y(i,j,1) (1335:17)
      remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_Y(i,j,1) (1335:17) and R_FACTOR(i,j,1) (1320:17)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: RESTORE_WILKINS_MASS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15389: vectorization support: reference PREV_CELL_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15389: vectorization support: reference PREV_CELL_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15389: vectorization support: reference PREV_CELL_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <PREV_CELL_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference CELL_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
      remark #15389: vectorization support: reference CELL_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference CELL_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <CELL_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2407,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2407:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15389: vectorization support: reference PREV_VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15389: vectorization support: reference PREV_VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15389: vectorization support: reference PREV_VERTEX_MASS(:,:,1) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <PREV_VERTEX_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VERTEX_MASS(:,:,1) has unaligned access
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VERTEX_MASS(:,:,1)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2408,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (2408:9) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.290 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ENERGY_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1570,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1571,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1575,21)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference TEMPERATURE_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1576,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1575,21)
      <Multiversioned v1>
         remark #15388: vectorization support: reference TEMPERATURE_VOF(tmp_mat,i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1576,25) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1575,21)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference TEMPERATURE_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1576,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1575,21)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <TEMPERATURE_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1576,25) ]
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1575,21)
      <Remainder, Multiversioned v2>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1647,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between TEMPERATURE_VOF(tmp_mat,i,j,1) (1653:29) and SIE(i,j,1) (1694:53)
         remark #15346: vector dependence: assumed OUTPUT dependence between SIE(i,j,1) (1694:53) and TEMPERATURE_VOF(tmp_mat,i,j,1) (1653:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1711,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1712,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: FIX_VOF_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1921,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1922,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1952,25)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,67) ]
         remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,95) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1952,25)
      <Multiversioned v1>
         remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,67) ]
         remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,95) ]
         remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,67) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.353
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 2.120 
         remark #15478: estimated potential speedup: 6.060 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1952,25)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,67) ]
         remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,95) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1952,25)
      <Multiversioned v2>
         remark #15415: vectorization support: non-unit strided load was generated for the variable <MAT_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,33) ]
         remark #15416: vectorization support: non-unit strided store was generated for the variable <MAT_VOF(tmp_mat,i,j,1)>, masked, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,67) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <MAT_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1954,95) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.053
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15452: unmasked strided loads: 2 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 14 
         remark #15477: vector cost: 7.120 
         remark #15478: estimated potential speedup: 1.830 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1952,25)
      <Remainder loop for vectorization, Multiversioned v2>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1964,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between MAT_VOF(tmp_mat,i,j,1) (1967:25) and SIE_VOF(tmp_mat,i,j,1) (1974:21)
         remark #15346: vector dependence: assumed ANTI dependence between SIE_VOF(tmp_mat,i,j,1) (1974:21) and MAT_VOF(tmp_mat,i,j,1) (1967:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(1964,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_REZONE_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.875
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.545
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 1.370 
         remark #15478: estimated potential speedup: 5.250 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.875
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
         remark #15388: vectorization support: reference at (157:7) has aligned access
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.250
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 5.500 
         remark #15478: estimated potential speedup: 1.400 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MATERIAL_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
         remark #15389: vectorization support: reference MATERIAL_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MATERIAL_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MATERIAL_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(157,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (157:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.875
         remark #15301: PEEL LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.545
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 1.370 
         remark #15478: estimated potential speedup: 5.250 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.875
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
         remark #15388: vectorization support: reference at (158:7) has aligned access
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.250
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 5.500 
         remark #15478: estimated potential speedup: 1.400 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MATERIAL_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
         remark #15389: vectorization support: reference MATERIAL_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MATERIAL_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MATERIAL_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(158,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (158:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(163,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (163:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(164,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (164:7) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(176,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(177,10)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between VELOCITY_Y(i,j,1) (178:13) and VELOCITY_X(i,j,1) (181:16)
      remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_X(i,j,1) (181:16) and VELOCITY_Y(i,j,1) (178:13)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(177,10)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(191,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (191:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15389: vectorization support: reference VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 2.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.540 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(192,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (192:13) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.326
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
         remark #15388: vectorization support: reference MESH_VELOCITY_X(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_X(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(195,13)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
         remark #15388: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference MESH_VELOCITY_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_Y(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MESH_VELOCITY_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/rezone.f90(196,13)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(122,10)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (124:16) and Y(i,j,1) (125:16)
   remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j,1) (125:16) and X(i,j,1) (124:16)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (124:16) and Y(i,j,1) (125:16)
      remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j,1) (125:16) and X(i,j,1) (124:16)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(122,10)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (124:16) and Y(i,j,1) (125:16)
      remark #15346: vector dependence: assumed OUTPUT dependence between Y(i,j,1) (125:16) and X(i,j,1) (124:16)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(123,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(137,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(138,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,k) (140:19) and Z(i,j,k) (142:19)
      remark #15346: vector dependence: assumed OUTPUT dependence between Z(i,j,k) (142:19) and X(i,j,k) (140:19)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(139,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,k) (140:19) and Z(i,j,k) (142:19)
         remark #15346: vector dependence: assumed OUTPUT dependence between Z(i,j,k) (142:19) and X(i,j,k) (140:19)
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(138,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/coordinates.f90(139,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,k) (140:19) and Z(i,j,k) (142:19)
         remark #15346: vector dependence: assumed OUTPUT dependence between Z(i,j,k) (142:19) and X(i,j,k) (140:19)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_MESH_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2191,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (2193:17) and R_FACTOR(i,j,1) (2195:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between R_FACTOR(i,j,1) (2195:17) and X(i,j,1) (2193:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2192,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (2193:17) and R_FACTOR(i,j,1) (2195:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between R_FACTOR(i,j,1) (2195:17) and X(i,j,1) (2193:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2191,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2192,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between X(i,j,1) (2193:17) and R_FACTOR(i,j,1) (2195:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between R_FACTOR(i,j,1) (2195:17) and X(i,j,1) (2193:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference ADV_MOMENTUM_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
         remark #15388: vectorization support: reference ADV_MOMENTUM_X(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference ADV_MOMENTUM_X(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <ADV_MOMENTUM_X(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <ADV_MOMENTUM_X(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2217,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference ADV_MOMENTUM_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
         remark #15388: vectorization support: reference ADV_MOMENTUM_Y(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference ADV_MOMENTUM_Y(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <ADV_MOMENTUM_Y(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <ADV_MOMENTUM_Y(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2218,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2221,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between MOMENTUM_X(i,j,1) (2223:17) and MOMENTUM_Y(i,j,1) (2225:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between MOMENTUM_Y(i,j,1) (2225:17) and MOMENTUM_X(i,j,1) (2223:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2222,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between MOMENTUM_X(i,j,1) (2223:17) and MOMENTUM_Y(i,j,1) (2225:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between MOMENTUM_Y(i,j,1) (2225:17) and MOMENTUM_X(i,j,1) (2223:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2221,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2222,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between MOMENTUM_X(i,j,1) (2223:17) and MOMENTUM_Y(i,j,1) (2225:17)
      remark #15346: vector dependence: assumed OUTPUT dependence between MOMENTUM_Y(i,j,1) (2225:17) and MOMENTUM_X(i,j,1) (2223:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7) inlined into /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(2245,14)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between ED_NUM(i) (121:10) and at (122:15)
   remark #15346: vector dependence: assumed FLOW dependence between at (122:15) and ED_NUM(i) (121:10)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(101,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(102,19)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(127,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(128,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(129,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(130,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(131,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(132,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(133,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(134,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(136,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(137,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(138,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(139,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(140,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(141,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(142,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(143,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(145,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(146,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(147,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(148,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(149,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(150,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(151,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(152,19) ]
   remark #15416: vectorization support: irregularly indexed store was generated for the variable <vol>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(154,19) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.019
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 96 
   remark #15451: unmasked unaligned unit stride stores: 16 
   remark #15462: unmasked indexed (or gather) loads: 24 
   remark #15463: unmasked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 1448 
   remark #15477: vector cost: 644.250 
   remark #15478: estimated potential speedup: 2.160 
   remark #15482: vectorized math library calls: 4 
   remark #15484: vector function calls: 8 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
   remark #15489: --- begin vector function matching report ---
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(154,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(155,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(156,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(157,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(158,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(159,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(160,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(161,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15493: --- end vector function matching report ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.046
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(121,10)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.025
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 95 
   remark #15477: vector cost: 38.250 
   remark #15478: estimated potential speedup: 2.320 
   remark #15482: vectorized math library calls: 4 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.180
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.045
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.272
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_ADVECT_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference SIE_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
         remark #15388: vectorization support: reference SIE_ADV(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference SIE_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <SIE_ADV(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <SIE_ADV(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(313,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference CELL_MASS_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
         remark #15388: vectorization support: reference CELL_MASS_ADV(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference CELL_MASS_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <CELL_MASS_ADV(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <CELL_MASS_ADV(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(314,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VOF_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
         remark #15388: vectorization support: reference VOF_ADV(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VOF_ADV(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VOF_ADV(:,:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.500 
      remark #15478: estimated potential speedup: 0.840 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VOF_ADV(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(315,9)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
      <Multiversioned v1>
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference AREA_TOP_IN(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.500 
            remark #15478: estimated potential speedup: 0.840 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
            remark #15388: vectorization support: reference AREA_TOP_IN(:,:,:,:) has aligned access
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.667
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 6.920 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference AREA_TOP_IN(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.500 
            remark #15478: estimated potential speedup: 0.840 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <AREA_TOP_IN(:,:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <AREA_TOP_IN(:,:,:,:)>, stride is unknown to compiler
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 4
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 0.970 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(317,9)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
      <Multiversioned v1>
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference AREA_TOP_OUT(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.500 
            remark #15478: estimated potential speedup: 0.840 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
            remark #15388: vectorization support: reference AREA_TOP_OUT(:,:,:,:) has aligned access
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.667
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 6.920 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference AREA_TOP_OUT(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.500 
            remark #15478: estimated potential speedup: 0.840 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <AREA_TOP_OUT(:,:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <AREA_TOP_OUT(:,:,:,:)>, stride is unknown to compiler
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 4
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 0.970 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(318,9)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(320,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference at (320:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(320,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (320:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(320,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (320:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(320,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (320:9)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(320,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(321,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference at (321:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(321,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (321:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(321,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (321:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(321,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (321:9)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(321,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(322,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference at (322:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(322,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (322:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(322,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (322:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(322,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (322:9)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(322,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(323,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference at (323:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(323,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (323:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(323,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (323:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(323,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (323:9)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(323,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(324,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference at (324:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(324,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (324:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(324,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (324:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(324,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (324:9)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(324,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(325,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference at (325:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(325,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (325:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(325,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (325:9) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.222
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(325,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (325:9)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(325,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
      <Multiversioned v1>
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference MAT_VOF_ADV(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.500 
            remark #15478: estimated potential speedup: 0.840 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
            remark #15388: vectorization support: reference MAT_VOF_ADV(:,:,:,:) has aligned access
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 1.667
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 6.920 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference MAT_VOF_ADV(:,:,:,:) has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.167
            remark #15301: REMAINDER LOOP WAS VECTORIZED
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.500 
            remark #15478: estimated potential speedup: 0.840 
            remark #15488: --- end vector cost summary ---
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_VOF_ADV(:,:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.500 
         remark #15478: estimated potential speedup: 0.840 
         remark #15488: --- end vector cost summary ---

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_VOF_ADV(:,:,:,:)>, stride is unknown to compiler
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 4
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 0.970 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(326,9)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(344,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(345,13)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(357,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(360,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(363,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(365,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(366,13)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_AREAS_FOR_ADVECT

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(421,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(421,9)
      remark #15389: vectorization support: reference AREA_OUT_TMP(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(421,9)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference AREA_OUT_TMP(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(422,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(422,9)
      remark #15389: vectorization support: reference AREA_IN_TMP(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(422,9)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference AREA_IN_TMP(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(467,17)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (467:17) and this%TOTAL_LEFT_IN (470:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between this%TOTAL_LEFT_IN (470:17) and at (467:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(467,17)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(467,17)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(467,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(476,13)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (477:17) and at (478:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (478:17) and at (477:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(476,13)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(476,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(476,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(490,59)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (490:17) and this%TOTAL_BOTTOM_IN (493:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between this%TOTAL_BOTTOM_IN (493:17) and at (490:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(490,59)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(490,59)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(490,59)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(499,13)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (500:17) and at (501:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (501:17) and at (500:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(499,13)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(499,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(499,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(511,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (512:13) and at (513:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (513:13) and at (512:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(511,9)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(511,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(511,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(522,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between AREA_TOP_OUT(tmp_mat,i,1,1) (524:13) and AREA_TOP_IN(tmp_mat,i,1,1) (525:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between AREA_TOP_IN(tmp_mat,i,1,1) (525:13) and AREA_TOP_OUT(tmp_mat,i,1,1) (524:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(522,9)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(522,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(522,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(530,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (532:13) and at (532:13)
   remark #15346: vector dependence: assumed ANTI dependence between at (532:13) and at (532:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(530,9)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(530,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(530,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_CELL_QUANTITIES_IN_ADVECT

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference MAT_CELL_MASS_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,13) ]
   remark #15389: vectorization support: reference SIE_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,13) ]
   remark #15389: vectorization support: reference MAT_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,13) ]
   remark #15389: vectorization support: reference INIT_MAT_LAYERS_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1753,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.295
   remark #15355: vectorization support: cell_mass_adv_top is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1714,9) ]
   remark #15355: vectorization support: total_cell_mass_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1709,9) ]
   remark #15355: vectorization support: total_area_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1710,9) ]
   remark #15355: vectorization support: total_sie_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1711,9) ]
   remark #15355: vectorization support: cell_mass_adv_right is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1713,9) ]
   remark #15355: vectorization support: cell_mass_adv_left is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1715,9) ]
   remark #15355: vectorization support: cell_mass_adv_bottom is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1716,9) ]
   remark #15355: vectorization support: cell_mass_adv_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1717,9) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
   remark #15389: vectorization support: reference MAT_CELL_MASS_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,13) ]
   remark #15389: vectorization support: reference SIE_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,13) ]
   remark #15389: vectorization support: reference MAT_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,13) ]
   remark #15388: vectorization support: reference INIT_MAT_LAYERS_TMP(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1753,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1766,59) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1766,88) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1735:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1735,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1736:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1736,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1737:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1737,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1738:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1738,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,58) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,92) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,122) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1740,29) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1740,84) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1741,29) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,61) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,97) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1744,17) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1744,47) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1744,83) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1745,38) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1745,74) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1746,38) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1746,74) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1747,38) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1747,74) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,65) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1753,69) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <INIT_MAT_LAYERS(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1753,104) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1754,21) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1754,50) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <INIT_MAT_LAYERS(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1754,85) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1755,42) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <INIT_MAT_LAYERS(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1755,77) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1756,42) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <INIT_MAT_LAYERS(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1756,77) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1757,42) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <INIT_MAT_LAYERS(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1757,77) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1767,80) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1768,80) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1769,80) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1770,80) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.300
   remark #15355: vectorization support: cell_mass_adv_top is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1714,9) ]
   remark #15355: vectorization support: total_cell_mass_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1709,9) ]
   remark #15355: vectorization support: total_area_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1710,9) ]
   remark #15355: vectorization support: total_sie_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1711,9) ]
   remark #15355: vectorization support: cell_mass_adv_right is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1713,9) ]
   remark #15355: vectorization support: cell_mass_adv_left is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1715,9) ]
   remark #15355: vectorization support: cell_mass_adv_bottom is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1716,9) ]
   remark #15355: vectorization support: cell_mass_adv_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1717,9) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 3 
   remark #15452: unmasked strided loads: 39 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 175 
   remark #15477: vector cost: 102.000 
   remark #15478: estimated potential speedup: 1.590 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference MAT_CELL_MASS_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,13) ]
   remark #15389: vectorization support: reference SIE_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,13) ]
   remark #15389: vectorization support: reference MAT_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,13) ]
   remark #15388: vectorization support: reference INIT_MAT_LAYERS_TMP(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1753,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.293
   remark #15355: vectorization support: cell_mass_adv_top is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1714,9) ]
   remark #15355: vectorization support: total_cell_mass_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1709,9) ]
   remark #15355: vectorization support: total_area_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1710,9) ]
   remark #15355: vectorization support: total_sie_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1711,9) ]
   remark #15355: vectorization support: cell_mass_adv_right is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1713,9) ]
   remark #15355: vectorization support: cell_mass_adv_left is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1715,9) ]
   remark #15355: vectorization support: cell_mass_adv_bottom is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1716,9) ]
   remark #15355: vectorization support: cell_mass_adv_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1717,9) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference MAT_CELL_MASS_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,13) ]
   remark #15389: vectorization support: reference SIE_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,13) ]
   remark #15389: vectorization support: reference MAT_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,13) ]
   remark #15389: vectorization support: reference INIT_MAT_LAYERS_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1759,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.383
   remark #15355: vectorization support: cell_mass_adv_top is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1714,9) ]
   remark #15355: vectorization support: total_cell_mass_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1709,9) ]
   remark #15355: vectorization support: total_area_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1710,9) ]
   remark #15355: vectorization support: total_sie_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1711,9) ]
   remark #15355: vectorization support: cell_mass_adv_right is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1713,9) ]
   remark #15355: vectorization support: cell_mass_adv_left is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1715,9) ]
   remark #15355: vectorization support: cell_mass_adv_bottom is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1716,9) ]
   remark #15355: vectorization support: cell_mass_adv_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1717,9) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
   remark #15389: vectorization support: reference MAT_CELL_MASS_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,13) ]
   remark #15389: vectorization support: reference SIE_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,13) ]
   remark #15389: vectorization support: reference MAT_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,13) ]
   remark #15388: vectorization support: reference INIT_MAT_LAYERS_TMP(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1759,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1766,59) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1766,88) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1735:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1735,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1736:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1736,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1737:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1737,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <at (1738:13)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1738,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,58) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,92) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,122) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1740,29) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1740,84) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1741,29) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,61) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,97) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1744,17) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1744,47) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i,j+1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1744,83) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1745,38) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1745,74) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1746,38) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1746,74) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1747,38) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <SIE_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1747,74) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <AREA_T_IN(tmp_mat,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,65) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i+1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1767,80) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1768,80) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1769,80) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <DENSITY_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1770,80) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.391
   remark #15355: vectorization support: cell_mass_adv_top is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1714,9) ]
   remark #15355: vectorization support: total_cell_mass_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1709,9) ]
   remark #15355: vectorization support: total_area_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1710,9) ]
   remark #15355: vectorization support: total_sie_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1711,9) ]
   remark #15355: vectorization support: cell_mass_adv_right is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1713,9) ]
   remark #15355: vectorization support: cell_mass_adv_left is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1715,9) ]
   remark #15355: vectorization support: cell_mass_adv_bottom is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1716,9) ]
   remark #15355: vectorization support: cell_mass_adv_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1717,9) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 3 
   remark #15452: unmasked strided loads: 28 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 141 
   remark #15477: vector cost: 77.000 
   remark #15478: estimated potential speedup: 1.700 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference MAT_CELL_MASS_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1739,13) ]
   remark #15389: vectorization support: reference SIE_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1743,13) ]
   remark #15389: vectorization support: reference MAT_VOF_ADV_TMP(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1749,13) ]
   remark #15388: vectorization support: reference INIT_MAT_LAYERS_TMP(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1759,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.380
   remark #15355: vectorization support: cell_mass_adv_top is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1714,9) ]
   remark #15355: vectorization support: total_cell_mass_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1709,9) ]
   remark #15355: vectorization support: total_area_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1710,9) ]
   remark #15355: vectorization support: total_sie_adv is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1711,9) ]
   remark #15355: vectorization support: cell_mass_adv_right is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1713,9) ]
   remark #15355: vectorization support: cell_mass_adv_left is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1715,9) ]
   remark #15355: vectorization support: cell_mass_adv_bottom is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1716,9) ]
   remark #15355: vectorization support: cell_mass_adv_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1717,9) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1733,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1777,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between MAT_VOF_ADV(tmp_mat,i,j,1) (1780:13) and INIT_MAT_LAYERS_ADV(tmp_mat,i,j,1) (1789:21)
   remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS_ADV(tmp_mat,i,j,1) (1789:21) and MAT_VOF_ADV(tmp_mat,i,j,1) (1780:13)
LOOP END
===========================================================================

Begin optimization report for: PUT_QUANTITIES_INTO_CELL

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1587,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between MAT_VOF(tmp_mat,i,j,1) (1592:21) and MAT_VOF_ADV(tmp_mat,i,j,1) (1613:21)
   remark #15346: vector dependence: assumed ANTI dependence between MAT_VOF_ADV(tmp_mat,i,j,1) (1613:21) and MAT_VOF(tmp_mat,i,j,1) (1592:21)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1619,17)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,21) ]
   remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,48) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1619,17)
<Multiversioned v1>
   remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,21) ]
   remark #15388: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,48) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.100
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 8.530 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1619,17)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,21) ]
   remark #15389: vectorization support: reference MAT_VOF(tmp_mat,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,48) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1619,17)
<Multiversioned v2>
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <MAT_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,21) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <MAT_VOF(tmp_mat,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1620,48) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.125
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1619,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1560,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between CELL_MASS_VOF(tmp_mat,i,j,1) (1562:17) and INIT_MAT_LAYERS(tmp_mat,i,j,1) (1568:53)
   remark #15346: vector dependence: assumed OUTPUT dependence between INIT_MAT_LAYERS(tmp_mat,i,j,1) (1568:53) and CELL_MASS_VOF(tmp_mat,i,j,1) (1562:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1560,13)
<Remainder>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1560,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between CELL_MASS_VOF(tmp_mat,i,j,1) (1562:17) and MAT_VOF(tmp_mat,i,j,1) (1564:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between MAT_VOF(tmp_mat,i,j,1) (1564:17) and CELL_MASS_VOF(tmp_mat,i,j,1) (1562:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1560,13)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: ADVECT_VELOCITIES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1865,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1866,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1870,17)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1933,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1934,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_X(i,j,1) (1936:21) and VELOCITY_Y(i,j,1) (1940:21)
      remark #15346: vector dependence: assumed OUTPUT dependence between VELOCITY_Y(i,j,1) (1940:21) and VELOCITY_X(i,j,1) (1936:21)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1934,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1946,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1947,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1948,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between VELOCITY_Y(i,j,1) (1949:17) and VELOCITY_X(i,j,1) (1952:21)
      remark #15346: vector dependence: assumed FLOW dependence between VELOCITY_X(i,j,1) (1952:21) and VELOCITY_Y(i,j,1) (1949:17)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1948,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^WRITE_TO_FILES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(618,9)
   remark #15382: vectorization support: call to function TEXTUAL_DIAGNOSTIC_MODULE^TEXTUAL_DIAGNOSTIC_APPLY cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(619,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (619:18) and at (619:18)
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^CLOSE_FILES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(639,9)
   remark #15382: vectorization support: call to function TEXTUAL_DIAGNOSTIC_MODULE^TEXTUAL_DIAGNOSTIC_CLOSE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Main/problem.f90(640,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (640:18) and at (640:18)
LOOP END
===========================================================================

Begin optimization report for: FIX_CONTOUR_I

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(152,9)
   remark #15382: vectorization support: call to function ELIPSE_CUT_LINE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(173,22) ]
   remark #15382: vectorization support: call to function ELIPSE_CUT_LINE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(178,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between a (154:17) and a (178:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between a (178:22) and a (154:17)
LOOP END
===========================================================================

Begin optimization report for: FIX_CONTOUR_ANGLE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(198,9)
   remark #15415: vectorization support: non-unit strided load was generated for the variable <contour_type(i)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(199,17) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <virt(i,1)>, masked, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(200,17) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <virt(i,1)>, masked, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(200,30) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <virt(i,1)>, masked, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(202,17) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <virt(i,1)>, masked, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(202,30) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.030
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15452: unmasked strided loads: 1 
   remark #15460: masked strided loads: 2 
   remark #15462: unmasked indexed (or gather) loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 18 
   remark #15477: vector cost: 16.750 
   remark #15478: estimated potential speedup: 1.030 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(198,9)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.068
   remark #15442: entire loop may be executed in remainder
   remark #15452: unmasked strided loads: 1 
   remark #15460: masked strided loads: 2 
   remark #15462: unmasked indexed (or gather) loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 18 
   remark #15477: vector cost: 16.750 
   remark #15478: estimated potential speedup: 1.030 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: SET_COMMUNICATION_MESH_BASE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(277,13) inlined into /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(135,14)
   remark #15382: vectorization support: call to function SET_COMMUNICATION cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(278,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (278:22) and at (278:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (278:22) and at (278:22)
LOOP END
===========================================================================

Begin optimization report for: EXCHANGE_VIRTUAL_SPACE_BLOCKING

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(283,14)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (301:22) and at (301:22)
   remark #15346: vector dependence: assumed ANTI dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: WRITE_MESH_BASE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(306,9)
   remark #15388: vectorization support: reference at (307:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(307,13) ]
   remark #15388: vectorization support: reference at (307:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(307,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(306,9)
   remark #15388: vectorization support: reference at (308:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(308,13) ]
   remark #15388: vectorization support: reference at (308:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(308,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: BUILD_MESH

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(136,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between this(:,:,:) (136:9) and at (136:9)
   remark #15346: vector dependence: assumed ANTI dependence between at (136:9) and this(:,:,:) (136:9)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(136,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between this(:,:,:) (136:9) and at (136:9)
      remark #15346: vector dependence: assumed ANTI dependence between at (136:9) and this(:,:,:) (136:9)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(136,9)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between this(:,:,:) (136:9) and at (136:9)
         remark #15346: vector dependence: assumed ANTI dependence between at (136:9) and this(:,:,:) (136:9)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BUILD_COORDINATES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15389: vectorization support: reference contour_line(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15389: vectorization support: reference contour_line(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15389: vectorization support: reference contour_line(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <contour_line(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(163,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(171,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(172,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(173,17)
         remark #15389: vectorization support: reference x_layer_down(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(174,21) ]
         remark #15389: vectorization support: reference x_layer_up(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(175,21) ]
         remark #15389: vectorization support: reference x_layer_up1(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(178,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <CONTOUR_I_LINE(n,ll)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(174,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <CONTOUR_I_LINE(n+1,ll)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(175,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <CONTOUR_I_LINE(n+2,ll)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(178,25) ]
         remark #15305: vectorization support: vector length 4
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.179
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 3 
         remark #15452: unmasked strided loads: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 20 
         remark #15477: vector cost: 10.500 
         remark #15478: estimated potential speedup: 1.200 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(173,17)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference x_layer_down(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(174,21) ]
         remark #15389: vectorization support: reference x_layer_up(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(175,21) ]
         remark #15389: vectorization support: reference x_layer_up1(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(178,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.246
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(173,17)
         remark #15389: vectorization support: reference x_layer_down(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(174,21) ]
         remark #15389: vectorization support: reference x_layer_up(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(175,21) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <CONTOUR_I_LINE(n,ll)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(174,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <CONTOUR_I_LINE(n+1,ll)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(175,21) ]
         remark #15305: vectorization support: vector length 4
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.200
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15452: unmasked strided loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 16 
         remark #15477: vector cost: 7.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(173,17)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference x_layer_down(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(174,21) ]
         remark #15389: vectorization support: reference x_layer_up(mm,ll) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(175,21) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.318
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(187,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(260,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between this%MESH_BASE(1,i,j,1) (261:25) and this%MESH_BASE(2,i,j,1) (262:25)
         remark #15346: vector dependence: assumed OUTPUT dependence between this%MESH_BASE(2,i,j,1) (262:25) and this%MESH_BASE(1,i,j,1) (261:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(265,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between this%MESH_BASE(1,i,j,1) (266:25) and this%MESH_BASE(2,i,j,1) (267:25)
         remark #15346: vector dependence: assumed OUTPUT dependence between this%MESH_BASE(2,i,j,1) (267:25) and this%MESH_BASE(1,i,j,1) (266:25)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BUILD_ANGLES

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(293,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(293,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(293,9)
         remark #15389: vectorization support: reference THETA0(:,:) has unaligned access
         remark #15389: vectorization support: reference theta0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(293,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference THETA0(:,:) has unaligned access
         remark #15389: vectorization support: reference theta0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.214
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(306,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(306,9)
      remark #15389: vectorization support: reference VIRT_THETA(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(306,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VIRT_THETA(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.273
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(308,9)
   remark #15382: vectorization support: call to function CALCULATE_CONSTANT cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(314,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this (309:13) and virt_theta (314:18)
   remark #15346: vector dependence: assumed FLOW dependence between virt_theta (314:18) and this (309:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(320,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(j) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(321,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.333
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(320,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(j) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(321,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VIRT_THETA(j)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(321,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.540 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(320,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(j) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(321,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.333
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(320,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(320,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_AVERAGE_COORDINATES_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(656,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (659:21) and at (663:21)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (663:21) and at (659:21)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(657,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between at (659:21) and at (663:21)
      remark #15346: vector dependence: assumed OUTPUT dependence between at (663:21) and at (659:21)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(658,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between at (659:21) and at (663:21)
         remark #15346: vector dependence: assumed OUTPUT dependence between at (663:21) and at (659:21)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: WRITE_MESH_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(696,9)
   remark #15388: vectorization support: reference at (697:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(697,13) ]
   remark #15388: vectorization support: reference at (697:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(697,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(696,9)
   remark #15388: vectorization support: reference at (698:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(698,13) ]
   remark #15388: vectorization support: reference at (698:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(698,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(696,9)
   remark #15388: vectorization support: reference at (699:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(699,13) ]
   remark #15388: vectorization support: reference at (699:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(699,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference at (705:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15389: vectorization support: reference this(:,:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.680 
      remark #15478: estimated potential speedup: 2.200 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
      remark #15389: vectorization support: reference at (705:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15389: vectorization support: reference this(:,:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.310 
      remark #15478: estimated potential speedup: 10.160 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (705:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15389: vectorization support: reference this(:,:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.680 
      remark #15478: estimated potential speedup: 2.200 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
      remark #15389: vectorization support: reference at (705:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15415: vectorization support: non-unit strided load was generated for the variable <this(:,:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.111
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.680 
      remark #15478: estimated potential speedup: 2.200 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(702,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (705:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(705,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.366
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.680 
      remark #15478: estimated potential speedup: 2.200 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: READ_MESH_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(772,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(772,9)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference at (775:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15389: vectorization support: reference this(:,:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(772,9)
   <Multiversioned v1>
      remark #15389: vectorization support: reference at (775:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15389: vectorization support: reference this(:,:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.310 
      remark #15478: estimated potential speedup: 10.160 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(772,9)
   <Multiversioned v2>
      remark #15389: vectorization support: reference at (775:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15415: vectorization support: non-unit strided load was generated for the variable <this(:,:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.111
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.680 
      remark #15478: estimated potential speedup: 2.200 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(772,9)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(772,9)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference at (775:13) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15389: vectorization support: reference this(:,:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference this(:,:) has unaligned access
      remark #15389: vectorization support: reference at (775:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13)
   <Multiversioned v1>
      remark #15389: vectorization support: reference this(:,:) has unaligned access
      remark #15389: vectorization support: reference at (775:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.310 
      remark #15478: estimated potential speedup: 10.160 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13)
   <Multiversioned v2>
      remark #15389: vectorization support: reference at (775:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15416: vectorization support: non-unit strided store was generated for the variable <this(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.052
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(775,13)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15389: vectorization support: reference this(:,:) has unaligned access
      remark #15389: vectorization support: reference at (775:13) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.818
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.620 
      remark #15478: estimated potential speedup: 1.030 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BUILD_ANGLES_PYRAMID_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(487,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(487,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(487,9)
         remark #15389: vectorization support: reference THETA0(:,:) has unaligned access
         remark #15389: vectorization support: reference theta0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(487,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference THETA0(:,:) has unaligned access
         remark #15389: vectorization support: reference theta0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.214
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(488,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(488,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(488,9)
         remark #15389: vectorization support: reference PHI0(:,:) has unaligned access
         remark #15389: vectorization support: reference phi0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(488,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference PHI0(:,:) has unaligned access
         remark #15389: vectorization support: reference phi0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.214
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(572,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between FACE_I_1_VIRT(i) (573:13) and FACE_I_1_VIRT(i-1) (573:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(572,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(576,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FACE_I_1_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(577,13) ]
   remark #15389: vectorization support: reference FACE_I_1_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(577,32) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(576,9)
   remark #15388: vectorization support: reference FACE_I_1_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(577,13) ]
   remark #15388: vectorization support: reference FACE_I_1_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(577,32) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.157
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(576,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference FACE_I_1_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(577,13) ]
   remark #15388: vectorization support: reference FACE_I_1_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(577,32) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.279
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(584,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between FACE_1_J_VIRT(i) (585:13) and FACE_1_J_VIRT(i-1) (585:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(584,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(588,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FACE_1_J_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(589,13) ]
   remark #15389: vectorization support: reference FACE_1_J_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(589,32) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(588,9)
   remark #15388: vectorization support: reference FACE_1_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(589,13) ]
   remark #15388: vectorization support: reference FACE_1_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(589,32) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.157
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(588,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference FACE_1_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(589,13) ]
   remark #15388: vectorization support: reference FACE_1_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(589,32) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.279
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(597,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between FACE_I_NYP_VIRT(i) (598:13) and FACE_I_NYP_VIRT(i-1) (598:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(597,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(601,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FACE_I_NYP_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(602,13) ]
   remark #15389: vectorization support: reference FACE_I_NYP_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(602,34) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(601,9)
   remark #15388: vectorization support: reference FACE_I_NYP_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(602,13) ]
   remark #15388: vectorization support: reference FACE_I_NYP_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(602,34) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.157
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(601,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference FACE_I_NYP_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(602,13) ]
   remark #15388: vectorization support: reference FACE_I_NYP_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(602,34) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.279
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(607,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between FACE_NXP_J_VIRT(i) (608:13) and FACE_NXP_J_VIRT(i-1) (608:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(607,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(611,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FACE_NXP_J_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(612,13) ]
   remark #15389: vectorization support: reference FACE_NXP_J_VIRT(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(612,34) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(611,9)
   remark #15388: vectorization support: reference FACE_NXP_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(612,13) ]
   remark #15388: vectorization support: reference FACE_NXP_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(612,34) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.157
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(611,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference FACE_NXP_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(612,13) ]
   remark #15388: vectorization support: reference FACE_NXP_J_VIRT(i) has aligned access   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(612,34) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.279
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 30 
   remark #15477: vector cost: 4.370 
   remark #15478: estimated potential speedup: 6.370 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(615,9)
   remark #15382: vectorization support: call to function TRIANGLE_METHOD cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(627,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between face_i_1 (622:17) and face_i_1 (627:22)
   remark #15346: vector dependence: assumed OUTPUT dependence between face_i_1 (627:22) and face_i_1 (622:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(618,13)
      remark #15382: vectorization support: call to function TRIANGLE_METHOD cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(627,22) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between face_i_1 (622:17) and face_i_1 (627:22)
      remark #15346: vector dependence: assumed OUTPUT dependence between face_i_1 (627:22) and face_i_1 (622:17)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BUILD_ANGLES_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(359,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(359,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(359,9)
         remark #15389: vectorization support: reference THETA0(:,:) has unaligned access
         remark #15389: vectorization support: reference theta0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(359,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference THETA0(:,:) has unaligned access
         remark #15389: vectorization support: reference theta0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.214
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(360,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(360,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(360,9)
         remark #15389: vectorization support: reference PHI0(:,:) has unaligned access
         remark #15389: vectorization support: reference phi0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(360,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference PHI0(:,:) has unaligned access
         remark #15389: vectorization support: reference phi0_df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.214
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.000 
         remark #15478: estimated potential speedup: 1.600 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(381,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(381,9)
      remark #15389: vectorization support: reference VIRT_THETA(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(381,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VIRT_THETA(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.273
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(382,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(382,9)
      remark #15389: vectorization support: reference VIRT_PHI(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(382,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VIRT_PHI(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.273
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(385,9)
   remark #15382: vectorization support: call to function CALCULATE_CONSTANT cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(390,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this (386:13) and virt_theta (390:18)
   remark #15346: vector dependence: assumed FLOW dependence between virt_theta (390:18) and this (386:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(398,9)
   remark #15382: vectorization support: call to function CALCULATE_CONSTANT cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(404,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this (399:13) and virt_phi (404:18)
   remark #15346: vector dependence: assumed FLOW dependence between virt_phi (404:18) and this (399:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(413,9)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (415:17) and VIRT_PHI(this%MESH_BASE(j)) (416:17)
   remark #15346: vector dependence: assumed ANTI dependence between VIRT_PHI(this%MESH_BASE(j)) (416:17) and at (415:17)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(414,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between at (415:17) and VIRT_PHI(this%MESH_BASE(j)) (416:17)
      remark #15346: vector dependence: assumed ANTI dependence between VIRT_PHI(this%MESH_BASE(j)) (416:17) and at (415:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(413,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(414,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between at (415:17) and VIRT_PHI(this%MESH_BASE(j)) (416:17)
      remark #15346: vector dependence: assumed ANTI dependence between VIRT_PHI(this%MESH_BASE(j)) (416:17) and at (415:17)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BUILD_COORDINATES_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15389: vectorization support: reference contour_line(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15389: vectorization support: reference contour_line(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15389: vectorization support: reference contour_line(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.214
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <contour_line(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(203,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference CONTOUR_I_LINE(:,:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.326
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.540 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(218,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(220,17)
      remark #15382: vectorization support: call to function GET_PHYSICAL_INDEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(236,27) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between CONTOUR_I_LINE_V%CONTOUR_I_LINE_V(0) (221:21) and at (236:27)
      remark #15346: vector dependence: assumed FLOW dependence between at (236:27) and CONTOUR_I_LINE_V%CONTOUR_I_LINE_V(0) (221:21)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(239,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(240,17)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(317,25)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between this%MESH_BASE(1,i,j,k) (318:29) and this%MESH_BASE(3,i,j,k) (320:29)
            remark #15346: vector dependence: assumed OUTPUT dependence between this%MESH_BASE(3,i,j,k) (320:29) and this%MESH_BASE(1,i,j,k) (318:29)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_3d.f90(325,25)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between this(i,j) (326:86) and this%MESH_BASE(3,i,j,k) (328:29)
            remark #15346: vector dependence: assumed FLOW dependence between this%MESH_BASE(3,i,j,k) (328:29) and this(i,j) (326:86)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SLIP_VERTEX_CALCULATE_2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex.f90(58,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between X(i,nyp,1) (60:21) and VALUES_DIM1(i,j,1) (70:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM1(i,j,1) (70:25) and X(i,nyp,1) (60:21)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex.f90(78,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between Y(nxp,j,1) (80:21) and VALUES_DIM2(i,j,1) (90:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM2(i,j,1) (90:25) and Y(nxp,j,1) (80:21)
LOOP END
===========================================================================

Begin optimization report for: BOUNDARY_MIRROR_2D_CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(39,9)
   remark #15382: vectorization support: call to function MIRROR_IMAGE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(48,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(53,9)
   remark #15382: vectorization support: call to function MIRROR_IMAGE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(61,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(66,9)
   remark #15382: vectorization support: call to function MIRROR_IMAGE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(74,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(81,9)
   remark #15382: vectorization support: call to function MIRROR_IMAGE cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_2d.f90(89,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: SLIP_CELL_CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(35,21)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(36,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,0,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,1,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(36,25)
      remark #15389: vectorization support: reference VALUES_4D(m,0,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,1,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(36,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,0,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,1,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(35,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,0,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(36,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,0,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(37,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(36,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(43,21)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(44,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,nxp,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,nxp-1,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(44,25)
      remark #15389: vectorization support: reference VALUES_4D(m,nxp,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,nxp-1,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(44,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,nxp,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,nxp-1,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(43,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,nxp,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,nxp-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(44,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,nxp,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,nxp-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(45,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(44,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(51,21)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(52,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,i,0,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,i,1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(52,25)
      remark #15389: vectorization support: reference VALUES_4D(m,i,0,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,i,1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(52,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,i,0,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,i,1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(51,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,0,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(52,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,0,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(53,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(52,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(59,21)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(60,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,i,nyp,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,i,nyp-1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(60,25)
      remark #15389: vectorization support: reference VALUES_4D(m,i,nyp,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,i,nyp-1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(60,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES_4D(m,i,nyp,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15389: vectorization support: reference VALUES_4D(m,i,nyp-1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(59,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,nyp,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,nyp-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(60,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,nyp,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,nyp-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(61,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(60,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(71,21)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(0,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(72,25) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(72,25) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(71,21)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(71,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(0,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(72,25) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(72,25) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(71,21)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(77,21)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(nxp,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(78,25) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(nxp-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(78,25) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(77,21)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(77,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(nxp,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(78,25) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(nxp-1,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(78,25) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(77,21)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(83,21)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference VALUES(i,0,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15389: vectorization support: reference VALUES(i,1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(83,21)
<Multiversioned v1>
   remark #15389: vectorization support: reference VALUES(i,0,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15389: vectorization support: reference VALUES(i,1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 5.630 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(83,21)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference VALUES(i,0,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15389: vectorization support: reference VALUES(i,1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(83,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,0,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(84,25) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(83,21)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(89,21)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference VALUES(i,nyp,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15389: vectorization support: reference VALUES(i,nyp-1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(89,21)
<Multiversioned v1>
   remark #15389: vectorization support: reference VALUES(i,nyp,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15389: vectorization support: reference VALUES(i,nyp-1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 5.630 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(89,21)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference VALUES(i,nyp,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15389: vectorization support: reference VALUES(i,nyp-1,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(89,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,nyp,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,nyp-1,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(90,25) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.980 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell.f90(89,21)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: BOUNDARY_MIRROR_3D_CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(56,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between normal_i1(:) (56:9) and wall_x_top%NORMAL_I1(:) (56:9)
   remark #15346: vector dependence: assumed ANTI dependence between wall_x_top%NORMAL_I1(:) (56:9) and normal_i1(:) (56:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(57,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between normal_inxp(:) (57:9) and wall_x_top%NORMAL_INXP(:) (57:9)
   remark #15346: vector dependence: assumed ANTI dependence between wall_x_top%NORMAL_INXP(:) (57:9) and normal_inxp(:) (57:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(58,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between normal_j1(:) (58:9) and wall_x_top%NORMAL_J1(:) (58:9)
   remark #15346: vector dependence: assumed ANTI dependence between wall_x_top%NORMAL_J1(:) (58:9) and normal_j1(:) (58:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(59,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between normal_jnyp(:) (59:9) and wall_x_top%NORMAL_JNYP(:) (59:9)
   remark #15346: vector dependence: assumed ANTI dependence between wall_x_top%NORMAL_JNYP(:) (59:9) and normal_jnyp(:) (59:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(60,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between normal_k1(:) (60:9) and wall_x_top%NORMAL_K1(:) (60:9)
   remark #15346: vector dependence: assumed ANTI dependence between wall_x_top%NORMAL_K1(:) (60:9) and normal_k1(:) (60:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(61,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between normal_knzp(:) (61:9) and wall_x_top%NORMAL_KNZP(:) (61:9)
   remark #15346: vector dependence: assumed ANTI dependence between wall_x_top%NORMAL_KNZP(:) (61:9) and normal_knzp(:) (61:9)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(68,13)
   remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(71,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(0,jj,kk) (71:26) and X(0,jj,kk) (71:26)
   remark #15346: vector dependence: assumed OUTPUT dependence between X(0,jj,kk) (71:26) and X(0,jj,kk) (71:26)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(69,17)
      remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(71,26) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(82,13)
   remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(84,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(nxp+1,jj,kk) (84:26) and X(nxp+1,jj,kk) (84:26)
   remark #15346: vector dependence: assumed OUTPUT dependence between X(nxp+1,jj,kk) (84:26) and X(nxp+1,jj,kk) (84:26)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(83,17)
      remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(84,26) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(94,13)
   remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(96,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,0,kk) (96:26) and X(ii,0,kk) (96:26)
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,0,kk) (96:26) and X(ii,0,kk) (96:26)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(95,17)
      remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(96,26) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(105,13)
   remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(107,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,nyp+1,kk) (107:26) and X(ii,nyp+1,kk) (107:26)
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,nyp+1,kk) (107:26) and X(ii,nyp+1,kk) (107:26)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(106,17)
      remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(107,26) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(118,13)
   remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(120,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,jj,0) (120:26) and X(ii,jj,0) (120:26)
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,jj,0) (120:26) and X(ii,jj,0) (120:26)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(119,17)
      remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(120,26) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(132,13)
   remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(134,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,jj,nzp+1) (134:26) and X(ii,jj,nzp+1) (134:26)
   remark #15346: vector dependence: assumed OUTPUT dependence between X(ii,jj,nzp+1) (134:26) and X(ii,jj,nzp+1) (134:26)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(133,17)
      remark #15382: vectorization support: call to function MIRROR_IMAGE_3D cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/boundary_mirror_3d.f90(134,26) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SLIP_VERTEX_CALCULATE_3D

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(67,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(67,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(67,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(67,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(67,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(68,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(68,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(68,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(68,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(68,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(69,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(69,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(69,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(69,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(69,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(142,31)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_KNZP(1) (140:25) and VALUES_DIM3(i,j,nzp) (145:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,j,nzp) (145:25) and nxp%BOUNDARY_PARAMS%NORMAL_KNZP(1) (140:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(139,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_KNZP(1) (140:25) and VALUES_DIM3(i,j,nzp) (145:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,j,nzp) (145:25) and nxp%BOUNDARY_PARAMS%NORMAL_KNZP(1) (140:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(142,31)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(139,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_KNZP(1) (140:25) and VALUES_DIM3(i,j,nzp) (145:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,j,nzp) (145:25) and nxp%BOUNDARY_PARAMS%NORMAL_KNZP(1) (140:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(130,31)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_K1(1) (128:25) and VALUES_DIM3(i,j,1) (133:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,j,1) (133:25) and nxp%BOUNDARY_PARAMS%NORMAL_K1(1) (128:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(127,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_K1(1) (128:25) and VALUES_DIM3(i,j,1) (133:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,j,1) (133:25) and nxp%BOUNDARY_PARAMS%NORMAL_K1(1) (128:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(130,31)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(127,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_K1(1) (128:25) and VALUES_DIM3(i,j,1) (133:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,j,1) (133:25) and nxp%BOUNDARY_PARAMS%NORMAL_K1(1) (128:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(117,31)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_JNYP(1) (115:25) and VALUES_DIM3(i,nyp,k) (120:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,nyp,k) (120:25) and nxp%BOUNDARY_PARAMS%NORMAL_JNYP(1) (115:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(114,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_JNYP(1) (115:25) and VALUES_DIM3(i,nyp,k) (120:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,nyp,k) (120:25) and nxp%BOUNDARY_PARAMS%NORMAL_JNYP(1) (115:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(117,31)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(114,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_JNYP(1) (115:25) and VALUES_DIM3(i,nyp,k) (120:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,nyp,k) (120:25) and nxp%BOUNDARY_PARAMS%NORMAL_JNYP(1) (115:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(104,31)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_J1(1) (102:25) and VALUES_DIM3(i,1,k) (107:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,1,k) (107:25) and nxp%BOUNDARY_PARAMS%NORMAL_J1(1) (102:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(101,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_J1(1) (102:25) and VALUES_DIM3(i,1,k) (107:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,1,k) (107:25) and nxp%BOUNDARY_PARAMS%NORMAL_J1(1) (102:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(104,31)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(101,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_J1(1) (102:25) and VALUES_DIM3(i,1,k) (107:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(i,1,k) (107:25) and nxp%BOUNDARY_PARAMS%NORMAL_J1(1) (102:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(91,31)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_INXP(1) (89:25) and VALUES_DIM3(nxp,j,k) (94:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(nxp,j,k) (94:25) and nxp%BOUNDARY_PARAMS%NORMAL_INXP(1) (89:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(88,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_INXP(1) (89:25) and VALUES_DIM3(nxp,j,k) (94:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(nxp,j,k) (94:25) and nxp%BOUNDARY_PARAMS%NORMAL_INXP(1) (89:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(91,31)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(88,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_INXP(1) (89:25) and VALUES_DIM3(nxp,j,k) (94:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(nxp,j,k) (94:25) and nxp%BOUNDARY_PARAMS%NORMAL_INXP(1) (89:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(74,17)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_I1(1) (76:25) and VALUES_DIM3(1,j,k) (81:25)
   remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(1,j,k) (81:25) and nxp%BOUNDARY_PARAMS%NORMAL_I1(1) (76:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(75,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_I1(1) (76:25) and VALUES_DIM3(1,j,k) (81:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(1,j,k) (81:25) and nxp%BOUNDARY_PARAMS%NORMAL_I1(1) (76:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(74,17)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(75,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between nxp%BOUNDARY_PARAMS%NORMAL_I1(1) (76:25) and VALUES_DIM3(1,j,k) (81:25)
      remark #15346: vector dependence: assumed FLOW dependence between VALUES_DIM3(1,j,k) (81:25) and nxp%BOUNDARY_PARAMS%NORMAL_I1(1) (76:25)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_FACE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(288,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(288,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(288,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(288,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(288,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(289,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(289,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(289,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(289,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(289,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(290,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(290,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(290,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(290,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(290,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(294,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference BOUNDARY_TYPE(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(294,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference BOUNDARY_TYPE(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(294,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference BOUNDARY_TYPE(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(294,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference BOUNDARY_TYPE(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(294,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(407,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(408,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(417,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(418,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(385,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(386,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(395,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(396,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(364,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(365,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(374,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(375,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(344,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(345,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(354,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(355,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(325,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(326,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(334,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(335,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(303,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(304,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(313,21)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(314,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_CORNER

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(453,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(453,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(453,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(453,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference IVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(453,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(454,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(454,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(454,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(454,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference JVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(454,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(455,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(455,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(455,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15389: vectorization support: reference nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.818
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(455,9)
<Multiversioned v2>
   remark #15389: vectorization support: reference KVIRT(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <nxp%BOUNDARY_PARAMS%PARALLEL_PARAMS(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.111
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.680 
   remark #15478: estimated potential speedup: 2.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(455,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(521,17)
   remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(523,29) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (523:29) and virt_nxp (523:29)
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (523:29) and virt_nxp (523:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(522,21)
      remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(523,29) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(510,17)
   remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(512,29) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (512:29) and virt_nxp (512:29)
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (512:29) and virt_nxp (512:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(511,21)
      remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(512,29) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(498,17)
   remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(500,29) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (500:29) and virt_nxp (500:29)
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (500:29) and virt_nxp (500:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(499,21)
      remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(500,29) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(486,17)
   remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(488,29) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (488:29) and virt_nxp (488:29)
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (488:29) and virt_nxp (488:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(487,21)
      remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(488,29) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(474,17)
   remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(476,29) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (476:29) and virt_nxp (476:29)
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (476:29) and virt_nxp (476:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(475,21)
      remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(476,29) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(462,17)
   remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(464,29) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (464:29) and virt_nxp (464:29)
   remark #15346: vector dependence: assumed OUTPUT dependence between virt_nxp (464:29) and virt_nxp (464:29)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(463,21)
      remark #15382: vectorization support: call to function CHECK_CORNER_VERTEX cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/slip_vertex_3d.f90(464,29) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SLIP_CELL_3D_CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,57)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(93,25)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(94,29)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,nzp) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,nzp-1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(94,29)
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,nzp) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,nzp-1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(94,29)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,nzp) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,nzp-1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(93,25)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,j,nzp)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,j,nzp-1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(94,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,j,nzp)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,j,nzp-1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(96,33) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 0.980 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(94,29)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,59)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(82,25)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(83,29)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,0) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(83,29)
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,0) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(83,29)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,0) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(82,25)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,j,0)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(83,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,j,0)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(85,33) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 0.980 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(83,29)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,57)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(70,25)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(71,29)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,nyp,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,nyp-1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(71,29)
         remark #15389: vectorization support: reference VALUES_4D(m,i,nyp,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,nyp-1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(71,29)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,nyp,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,nyp-1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(70,25)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,nyp,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,nyp-1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(71,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,nyp,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,nyp-1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(73,33) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 0.980 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(71,29)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,59)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(59,25)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(60,29)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,0,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(60,29)
         remark #15389: vectorization support: reference VALUES_4D(m,i,0,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(60,29)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,i,0,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,i,1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(59,25)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,0,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(60,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,i,0,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,i,1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(62,33) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 0.980 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(60,29)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,57)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(48,25)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(49,29)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,nxp,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,nxp-1,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(49,29)
         remark #15389: vectorization support: reference VALUES_4D(m,nxp,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,nxp-1,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(49,29)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,nxp,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,nxp-1,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(48,25)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,nxp,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,nxp-1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(49,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,nxp,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,nxp-1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(51,33) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 0.980 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(49,29)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(36,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(37,25)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(38,29)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,0,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,1,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(38,29)
         remark #15389: vectorization support: reference VALUES_4D(m,0,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,1,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 2.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 5.630 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(38,29)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference VALUES_4D(m,0,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15389: vectorization support: reference VALUES_4D(m,1,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.133
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.870 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(37,25)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,0,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(38,29)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES_4D(m,0,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES_4D(m,1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(39,33) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 0.980 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(38,29)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,47)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(150,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,j,nzp) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15389: vectorization support: reference VALUES(i,j,nzp-1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(150,25)
      remark #15389: vectorization support: reference VALUES(i,j,nzp) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15389: vectorization support: reference VALUES(i,j,nzp-1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(150,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,j,nzp) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15389: vectorization support: reference VALUES(i,j,nzp-1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,47)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,j,nzp)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,j,nzp-1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(150,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,j,nzp)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,j,nzp-1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(151,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(150,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,49)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(142,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,j,0) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15389: vectorization support: reference VALUES(i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(142,25)
      remark #15389: vectorization support: reference VALUES(i,j,0) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15389: vectorization support: reference VALUES(i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(142,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,j,0) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15389: vectorization support: reference VALUES(i,j,1) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,49)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,j,0)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(142,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,j,0)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,j,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(143,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(142,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,47)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(134,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,nyp,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15389: vectorization support: reference VALUES(i,nyp-1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(134,25)
      remark #15389: vectorization support: reference VALUES(i,nyp,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15389: vectorization support: reference VALUES(i,nyp-1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(134,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,nyp,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15389: vectorization support: reference VALUES(i,nyp-1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,47)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,nyp,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,nyp-1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(134,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,nyp,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,nyp-1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(135,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(134,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,49)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(126,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,0,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15389: vectorization support: reference VALUES(i,1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(126,25)
      remark #15389: vectorization support: reference VALUES(i,0,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15389: vectorization support: reference VALUES(i,1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 2.600
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 5.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(126,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference VALUES(i,0,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15389: vectorization support: reference VALUES(i,1,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.133
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 0.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,49)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,0,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(126,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(i,0,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(i,1,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(127,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(126,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,47)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(nxp,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(nxp-1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(118,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(nxp,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(nxp-1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(118,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,47)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(nxp,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(nxp-1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(118,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(nxp,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(nxp-1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(119,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(118,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(108,21)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(0,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(109,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(0,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(109,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(108,21)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(0,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.870 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(109,25)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VALUES(0,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VALUES(1,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(110,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 0.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Cell/slip_cell_3d.f90(109,25)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: NO_SLIP_VERTEX_3D_CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(117,25)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,j,nzp) (115:25) and VALUES_DIM3(i,j,nzp) (117:25)
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,j,nzp) (117:25) and VALUES_DIM1(i,j,nzp) (115:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(114,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,j,nzp) (115:25) and VALUES_DIM3(i,j,nzp) (117:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,j,nzp) (117:25) and VALUES_DIM1(i,j,nzp) (115:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(114,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(117,25)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(114,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,j,nzp) (115:25) and VALUES_DIM3(i,j,nzp) (117:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,j,nzp) (117:25) and VALUES_DIM1(i,j,nzp) (115:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(114,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(108,25)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,j,1) (106:25) and VALUES_DIM3(i,j,1) (108:25)
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,j,1) (108:25) and VALUES_DIM1(i,j,1) (106:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(105,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,j,1) (106:25) and VALUES_DIM3(i,j,1) (108:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,j,1) (108:25) and VALUES_DIM1(i,j,1) (106:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(105,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(108,25)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(105,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,j,1) (106:25) and VALUES_DIM3(i,j,1) (108:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,j,1) (108:25) and VALUES_DIM1(i,j,1) (106:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(105,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(99,25)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,nyp,k) (97:25) and VALUES_DIM3(i,nyp,k) (99:25)
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,nyp,k) (99:25) and VALUES_DIM1(i,nyp,k) (97:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(96,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,nyp,k) (97:25) and VALUES_DIM3(i,nyp,k) (99:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,nyp,k) (99:25) and VALUES_DIM1(i,nyp,k) (97:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(96,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(99,25)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(96,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,nyp,k) (97:25) and VALUES_DIM3(i,nyp,k) (99:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,nyp,k) (99:25) and VALUES_DIM1(i,nyp,k) (97:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(96,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(90,25)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,1,k) (88:25) and VALUES_DIM3(i,1,k) (90:25)
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,1,k) (90:25) and VALUES_DIM1(i,1,k) (88:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(87,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,1,k) (88:25) and VALUES_DIM3(i,1,k) (90:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,1,k) (90:25) and VALUES_DIM1(i,1,k) (88:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(87,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(90,25)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(87,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(i,1,k) (88:25) and VALUES_DIM3(i,1,k) (90:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(i,1,k) (90:25) and VALUES_DIM1(i,1,k) (88:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(87,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(81,25)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(nxp,j,k) (79:25) and VALUES_DIM3(nxp,j,k) (81:25)
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(nxp,j,k) (81:25) and VALUES_DIM1(nxp,j,k) (79:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(78,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(nxp,j,k) (79:25) and VALUES_DIM3(nxp,j,k) (81:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(nxp,j,k) (81:25) and VALUES_DIM1(nxp,j,k) (79:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(78,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(81,25)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(78,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(nxp,j,k) (79:25) and VALUES_DIM3(nxp,j,k) (81:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(nxp,j,k) (81:25) and VALUES_DIM1(nxp,j,k) (79:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(78,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(67,17)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(1,j,k) (69:25) and VALUES_DIM3(1,j,k) (71:25)
   remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(1,j,k) (71:25) and VALUES_DIM1(1,j,k) (69:25)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(68,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(1,j,k) (69:25) and VALUES_DIM3(1,j,k) (71:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(1,j,k) (71:25) and VALUES_DIM1(1,j,k) (69:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(68,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(67,17)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(68,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM1(1,j,k) (69:25) and VALUES_DIM3(1,j,k) (71:25)
      remark #15346: vector dependence: assumed OUTPUT dependence between VALUES_DIM3(1,j,k) (71:25) and VALUES_DIM1(1,j,k) (69:25)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/Vertex/no_slip_vertex_3d.f90(68,21)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CLEAN_QUANTITY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(215,9)
   remark #15382: vectorization support: call to function CLEAN_DATA cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(216,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (216:18) and at (216:18)
LOOP END
===========================================================================

Begin optimization report for: DEBUG_CHECK_NAN

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(358,9)
   remark #15382: vectorization support: call to function DEBUG_CHECK_NAN cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(359,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (359:18) and at (359:18)
LOOP END
===========================================================================

Begin optimization report for: EXCHANGE_VIRTUAL_SPACE_BLOCKING

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END
===========================================================================

Begin optimization report for: EXCHANGE_VIRTUAL_SPACE_NONBLOCKING

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END
===========================================================================

Begin optimization report for: DEBUG_PRINT

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(381,13)
   remark #15382: vectorization support: call to function for_write_int_fmt cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(382,17) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(383,66) ]
   remark #15382: vectorization support: call to function DEBUG_PRINT cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(383,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (382:17) and at (382:17)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (382:17) and at (382:17)
LOOP END
===========================================================================

Begin optimization report for: WRITE_QUANTITY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(408,9)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(408,9)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: READ_QUANTITY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(449,9)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(449,9)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(450,13)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(120,7)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/cell_quantity.f90(122,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (121:10) and edge (122:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (122:15) and edge (121:10)
LOOP END
===========================================================================

Begin optimization report for: CALCULATE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(101,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(102,19)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(127,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(128,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(129,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(130,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(131,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(132,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(133,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <x>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(134,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(136,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(137,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(138,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(139,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(140,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(141,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(142,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <y>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(143,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(145,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(146,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(147,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(148,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(149,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(150,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, 64-bit indexed, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(151,19) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <z>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(152,19) ]
   remark #15416: vectorization support: irregularly indexed store was generated for the variable <vol>, part of index is nonlinearly computed   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(154,19) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.019
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 96 
   remark #15451: unmasked unaligned unit stride stores: 16 
   remark #15462: unmasked indexed (or gather) loads: 24 
   remark #15463: unmasked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 1448 
   remark #15477: vector cost: 644.250 
   remark #15478: estimated potential speedup: 2.160 
   remark #15482: vectorized math library calls: 4 
   remark #15484: vector function calls: 8 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
   remark #15489: --- begin vector function matching report ---
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(154,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(155,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(156,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(157,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(158,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(159,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(160,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15490: Function call: X_PROJ with simdlen=8, actual parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(161,36) ]
   remark #15492: A suitable vector variant was found (out of 2) with xmm, simdlen=2, unmasked, formal parameter types: (vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector,vector)
   remark #26014: The function ISA does not match the compilation target. For better SIMD performance, consider using -vecabi=cmdtarget compiler switch or "processor" clause in vector function declaration
   remark #15493: --- end vector function matching report ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.046
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(121,10)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.025
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 95 
   remark #15477: vector cost: 38.250 
   remark #15478: estimated potential speedup: 2.320 
   remark #15482: vectorized math library calls: 4 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.180
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.045
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/volume.f90(119,7)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.272
   remark #15442: entire loop may be executed in remainder
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 49 
   remark #15477: vector cost: 19.370 
   remark #15478: estimated potential speedup: 2.420 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: BUILD_BOUNDARY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.210 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15416: vectorization support: non-unit strided store was generated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(702,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: WRITE_BOUNDARY_PARAMETERS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (825:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(825,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(825,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 11.650 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (825:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(825,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(825,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.789
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.870 
   remark #15478: estimated potential speedup: 1.300 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (825:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(825,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(825,13) ]
   remark #15305: vectorization support: vector length 16
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.870 
   remark #15478: estimated potential speedup: 1.300 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (826:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(826,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(826,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (826:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(826,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(826,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (826:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(826,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(826,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (833:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(833,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(833,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (833:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(833,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(833,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (833:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(833,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(833,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (834:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(834,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(834,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (834:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(834,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(834,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (834:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(834,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(834,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (835:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(835,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(835,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (835:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(835,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(835,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (835:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(835,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(835,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(820,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: READ_BOUNDARY_PARAMETERS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (933:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 11.650 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (933:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.789
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.870 
   remark #15478: estimated potential speedup: 1.300 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (933:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13) ]
   remark #15305: vectorization support: vector length 16
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.870 
   remark #15478: estimated potential speedup: 1.300 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (933:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 9.750 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (933:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (933:13) has aligned access
   remark #15416: vectorization support: non-unit strided store was generated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 16
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 1.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(933,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (934:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (934:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (934:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (934:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 5.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (934:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.077
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (934:13) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(934,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (941:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (941:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (941:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (941:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 5.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (941:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.077
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (941:13) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(941,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (942:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (942:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (942:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (942:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 5.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (942:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.077
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (942:13) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(942,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference at (943:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.620 
   remark #15478: estimated potential speedup: 6.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference at (943:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13) ]
   remark #15389: vectorization support: reference this(:) has unaligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (943:13) has aligned access   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <this(:)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(928,9)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (943:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.750 
   remark #15478: estimated potential speedup: 5.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15388: vectorization support: reference at (943:13) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.077
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13)
<Multiversioned v2>
   remark #15388: vectorization support: reference at (943:13) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Boundary_conditions/boundary_parameters.f90(943,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(124,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(127,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (125:13) and edge (127:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (127:18) and edge (125:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(130,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(132,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (131:13) and edge (132:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (132:18) and edge (131:13)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(135,9)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Vertex/vertex_quantity.f90(137,18) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (136:13) and edge (137:18)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (137:18) and edge (136:13)
LOOP END
===========================================================================

Begin optimization report for: APPLY_BOUNDARY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(105,7)
   remark #15382: vectorization support: call to function (Indirect call) cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(107,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (106:10) and edge (107:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between edge (107:15) and edge (106:10)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(300,13) inlined into /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(111,15)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_BLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(301,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (301:22) and at (301:22)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(325,13) inlined into /home/u175356/ScalSALE-main/src/Quantities/Cell/material_quantity.f90(113,15)
   remark #15382: vectorization support: call to function EXCHANGE_VIRTUAL_SPACE_NONBLOCKING cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(326,22) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (326:22) and at (326:22)
LOOP END
===========================================================================

Begin optimization report for: UPDATE_VISC_FACTORS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(120,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(121,17)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference nx(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(123,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21)
      <Multiversioned v1>
         remark #15388: vectorization support: reference nx(i,j,k) has aligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(123,25) ]
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.920 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference nx(i,j,k) has unaligned access   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(123,25) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.167
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21)
      <Multiversioned v2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <nx(i,j,k)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(123,25) ]
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(122,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: APPLY_EOS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(222,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.210 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15416: vectorization support: non-unit strided store was generated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_DENSITY

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(669,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(670,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between DENSITY(i,j,k) (672:21) and CELL_MASS(i,j,k) (672:21)
      remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (672:21) and DENSITY(i,j,k) (672:21)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(671,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between DENSITY(i,j,k) (672:21) and CELL_MASS(i,j,k) (672:21)
         remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (672:21) and DENSITY(i,j,k) (672:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(671,17)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(670,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(671,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between DENSITY(i,j,k) (672:21) and VOL(i,j,k) (672:21)
         remark #15346: vector dependence: assumed ANTI dependence between VOL(i,j,k) (672:21) and DENSITY(i,j,k) (672:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(671,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(679,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(680,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(681,17)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(682,21)
         <Multiversioned v1>
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between DENSITY_VOF(tmp_mat,i,j,k) (683:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (685:29)
            remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (685:29) and DENSITY_VOF(tmp_mat,i,j,k) (683:25)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(682,21)
         <Remainder, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(682,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(682,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_INVERSED_VERTEX_MASS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(706,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(707,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(708,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between VERTEX_MASS(i,j,k) (710:25) and INVERSED_VERTEX_MASS(i,j,k) (712:25)
         remark #15346: vector dependence: assumed FLOW dependence between INVERSED_VERTEX_MASS(i,j,k) (712:25) and VERTEX_MASS(i,j,k) (710:25)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(708,17)
      <Remainder, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(708,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Time_step/hydro_step.f90(708,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CALC_AREA_FOR_EACH_SIDE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(614,13)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference area_in(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,17) ]
   remark #15389: vectorization support: reference AREA_IN_1(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,37) ]
   remark #15389: vectorization support: reference AREA_IN_2(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,59) ]
   remark #15389: vectorization support: reference area_out(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,17) ]
   remark #15389: vectorization support: reference AREA_OUT_1(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,37) ]
   remark #15389: vectorization support: reference AREA_OUT_2(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,59) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.784
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 4 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 13 
   remark #15477: vector cost: 2.620 
   remark #15478: estimated potential speedup: 4.500 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(614,13)
   remark #15389: vectorization support: reference area_in(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,17) ]
   remark #15389: vectorization support: reference AREA_IN_1(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,37) ]
   remark #15389: vectorization support: reference AREA_IN_2(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,59) ]
   remark #15388: vectorization support: reference area_out(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,17) ]
   remark #15389: vectorization support: reference AREA_OUT_1(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,37) ]
   remark #15389: vectorization support: reference AREA_OUT_2(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,59) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.595
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 4 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 13 
   remark #15477: vector cost: 2.620 
   remark #15478: estimated potential speedup: 4.500 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(614,13)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference area_in(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,17) ]
   remark #15389: vectorization support: reference AREA_IN_1(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,37) ]
   remark #15389: vectorization support: reference AREA_IN_2(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(615,59) ]
   remark #15389: vectorization support: reference area_out(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,17) ]
   remark #15389: vectorization support: reference AREA_OUT_1(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,37) ]
   remark #15389: vectorization support: reference AREA_OUT_2(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(616,59) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.784
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 4 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 13 
   remark #15477: vector cost: 2.620 
   remark #15478: estimated potential speedup: 4.500 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: VOLUME_MATERIAL_NEW

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1048,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_out(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1048,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference area_out(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1048,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_out(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1048,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <area_out(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1048,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1049,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_in(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1049,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference area_in(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1049,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_in(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1049,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <area_in(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1049,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1050,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1050,9)
      remark #15389: vectorization support: reference FM(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1050,9)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference FM(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1051,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1051,9)
      remark #15389: vectorization support: reference FRE_MAIN(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1051,9)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference FRE_MAIN(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1071,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1090,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1094,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,44) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,65) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.719
      remark #15355: vectorization support: df1 is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,29) ]
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 4 
      remark #15457: masked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 47 
      remark #15477: vector cost: 11.250 
      remark #15478: estimated potential speedup: 3.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1094,25)
      remark #15388: vectorization support: reference FRE_MAIN(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,44) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,65) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.191
      remark #15355: vectorization support: df1 is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,29) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 45 
      remark #15477: vector cost: 6.370 
      remark #15478: estimated potential speedup: 6.490 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1094,25)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference FRE_MAIN(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,44) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,65) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15355: vectorization support: df1 is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1096,29) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 4 
      remark #15457: masked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 47 
      remark #15477: vector cost: 11.250 
      remark #15478: estimated potential speedup: 3.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1100,25)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,29) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,43) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,63) ]
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,29) ]
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,49) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,80) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1106,67) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.258
      remark #15355: vectorization support: f_tot_with_rem is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1087,17) ]
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 4 
      remark #15457: masked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 47 
      remark #15477: vector cost: 11.250 
      remark #15478: estimated potential speedup: 3.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1100,25)
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,29) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,43) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,63) ]
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,29) ]
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,49) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,80) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1106,67) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.478
      remark #15355: vectorization support: f_tot_with_rem is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1087,17) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 4 
      remark #15457: masked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 47 
      remark #15477: vector cost: 11.250 
      remark #15478: estimated potential speedup: 3.870 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1100,25)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,29) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,43) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1103,63) ]
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,29) ]
      remark #15389: vectorization support: reference FRE_MAIN(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,49) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1104,80) ]
      remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1106,67) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.258
      remark #15355: vectorization support: f_tot_with_rem is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1087,17) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 4 
      remark #15457: masked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 47 
      remark #15477: vector cost: 11.250 
      remark #15478: estimated potential speedup: 3.870 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1114,21)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,25) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,39) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,58) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.478
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15454: masked aligned unit stride loads: 2 
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 17 
   remark #15477: vector cost: 3.870 
   remark #15478: estimated potential speedup: 4.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1114,21)
   remark #15388: vectorization support: reference FM(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,25) ]
   remark #15388: vectorization support: reference FM(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,39) ]
   remark #15388: vectorization support: reference FM(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,58) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <MAT_VOF(tmp_mat,id,jd,1)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1115,29) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.194
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15454: masked aligned unit stride loads: 2 
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 17 
   remark #15477: vector cost: 3.870 
   remark #15478: estimated potential speedup: 4.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1114,21)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference FM(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,25) ]
   remark #15388: vectorization support: reference FM(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,39) ]
   remark #15388: vectorization support: reference FM(tmp_mat) has aligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1116,58) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.333
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15454: masked aligned unit stride loads: 2 
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 17 
   remark #15477: vector cost: 3.870 
   remark #15478: estimated potential speedup: 4.070 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1122,17)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1127,17) ]
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1140,13)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1142,37) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1143,37) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.607
   remark #15355: vectorization support: total_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1135,13) ]
   remark #15355: vectorization support: total_in is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1136,13) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 12.120 
   remark #15478: estimated potential speedup: 2.620 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1140,13)
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1142,37) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1143,37) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15416: vectorization support: non-unit strided store was generated for the variable <area_out(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1142,17) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <area_in(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1143,17) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <area_out(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1144,41) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <area_in(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1145,41) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.392
   remark #15355: vectorization support: total_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1135,13) ]
   remark #15355: vectorization support: total_in is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1136,13) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 12.120 
   remark #15478: estimated potential speedup: 2.620 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1140,13)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1142,37) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1143,37) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.607
   remark #15355: vectorization support: total_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1135,13) ]
   remark #15355: vectorization support: total_in is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1136,13) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 12.120 
   remark #15478: estimated potential speedup: 2.620 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1140,13)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: VOLUME_MATERIAL_OLD

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1196,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_out(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1196,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference area_out(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1196,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_out(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1196,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <area_out(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1196,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1197,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_in(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1197,9)
<Multiversioned v1>
   remark #15388: vectorization support: reference area_in(:) has aligned access
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 0.370 
   remark #15478: estimated potential speedup: 6.920 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1197,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference area_in(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.167
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1197,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <area_in(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1197,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1198,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1198,9)
      remark #15389: vectorization support: reference FM(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1198,9)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference FM(:) has aligned access
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.222
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1217,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1271,13)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1273,37) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1274,37) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.607
   remark #15355: vectorization support: total_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1266,13) ]
   remark #15355: vectorization support: total_in is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1267,13) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 12.120 
   remark #15478: estimated potential speedup: 2.620 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1271,13)
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1273,37) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1274,37) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15416: vectorization support: non-unit strided store was generated for the variable <area_out(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1273,17) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <area_in(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1274,17) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <area_out(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1275,41) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <area_in(tmp_mat)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1276,41) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.392
   remark #15355: vectorization support: total_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1266,13) ]
   remark #15355: vectorization support: total_in is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1267,13) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 12.120 
   remark #15478: estimated potential speedup: 2.620 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1271,13)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1273,37) ]
   remark #15389: vectorization support: reference FM(tmp_mat) has unaligned access   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1274,37) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.607
   remark #15355: vectorization support: total_out is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1266,13) ]
   remark #15355: vectorization support: total_in is double type reduction   [ /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1267,13) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 12.120 
   remark #15478: estimated potential speedup: 2.620 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(1271,13)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_VOF_LINE_NEW

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(766,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between c_temp(jj) (770:21) and c_temp(jj+1) (775:21)
   remark #15346: vector dependence: assumed FLOW dependence between c_temp(jj+1) (775:21) and c_temp(jj) (770:21)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(767,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between c_temp(jj) (772:21) and c_temp(jj+1) (775:21)
      remark #15346: vector dependence: assumed OUTPUT dependence between c_temp(jj+1) (775:21) and c_temp(jj) (772:21)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(767,13)
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(767,13)
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(967,9)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: CALCULATE_IDEAL_GAS

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/Equation_of_state/ideal_gas.f90(56,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between sie%6a5%6a5(3) (61:22) and pressure(mat_num,i,j,k) (74:22)
   remark #15346: vector dependence: assumed FLOW dependence between pressure(mat_num,i,j,k) (74:22) and sie%6a5%6a5(3) (61:22)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/Equation_of_state/ideal_gas.f90(57,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between sie%6a5%6a5(3) (61:22) and pressure(mat_num,i,j,k) (74:22)
      remark #15346: vector dependence: assumed FLOW dependence between pressure(mat_num,i,j,k) (74:22) and sie%6a5%6a5(3) (61:22)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/Equation_of_state/ideal_gas.f90(58,13)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between sie%6a5%6a5(3) (61:22) and pressure(mat_num,i,j,k) (74:22)
         remark #15346: vector dependence: assumed FLOW dependence between pressure(mat_num,i,j,k) (74:22) and sie%6a5%6a5(3) (61:22)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: APPLY_EOS..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(222,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.210 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.273
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15416: vectorization support: non-unit strided store was generated for the variable <this(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 0.240 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material.f90(228,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: DEFAULTS_MODULE::DEFAULT_MATERIAL

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Input/defaults.f90(290,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: FIX_OVERFLOW_ERROR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2002,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between vof_max (2007:42) and vof_max (2008:17)
   remark #15346: vector dependence: assumed FLOW dependence between vof_max (2008:17) and vof_max (2007:42)
   remark #15346: vector dependence: assumed ANTI dependence between vof_max (2007:42) and vof_max (2008:17)
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Rezone_and_Advect/advect.f90(2002,9)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: INIT_MATERIAL_BASE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_base.f90(69,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15389: vectorization support: reference mat_ids(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.620 
   remark #15478: estimated potential speedup: 1.030 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_base.f90(69,1)
<Multiversioned v1>
   remark #15389: vectorization support: reference this(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15389: vectorization support: reference mat_ids(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.600
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.310 
   remark #15478: estimated potential speedup: 10.160 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_base.f90(69,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference this(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15389: vectorization support: reference mat_ids(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.133
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.620 
   remark #15478: estimated potential speedup: 1.030 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_base.f90(69,1)
<Multiversioned v2>
   remark #15389: vectorization support: reference mat_ids(i) has unaligned access   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15416: vectorization support: non-unit strided store was generated for the variable <this(i)>, stride is unknown to compiler   [ /home/u175356/ScalSALE-main/src/Material/material_base.f90(70,7) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.052
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.620 
   remark #15478: estimated potential speedup: 1.030 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Material/material_base.f90(69,1)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: INITIALIZE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference this(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.250
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
         remark #15388: vectorization support: reference this(:,:,:) has aligned access
         remark #15305: vectorization support: vector length 8
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.833
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 6.870 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference this(:,:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 1.250
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
   <Multiversioned v2>
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <this(:,:,:)>, stride is unknown to compiler
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.042
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 0.970 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/Cell/artificial_viscosity.f90(218,18)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: INIT_QUANTITY_NO_INIT

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(195,9)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(196,9)
   remark #15382: vectorization support: call to function CONSTRUCTOR_NO_INIT cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(197,28) ]
   remark #15382: vectorization support: call to function for_alloc_assign_v2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(197,13) ]
   remark #15382: vectorization support: call to function for_dealloc_all_nocheck cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(197,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (197:13) and at (197:13)
LOOP END
===========================================================================

Begin optimization report for: INIT_QUANTITY_INIT_VAL

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(125,9)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(126,9)
   remark #15382: vectorization support: call to function CONSTRUCTOR_INIT_VAL cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(127,28) ]
   remark #15382: vectorization support: call to function for_alloc_assign_v2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(127,13) ]
   remark #15382: vectorization support: call to function for_dealloc_all_nocheck cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(127,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (127:13) and at (127:13)
LOOP END
===========================================================================

Begin optimization report for: INIT_QUANTITY_INIT_ARR

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(99,9)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(100,9)
   remark #15382: vectorization support: call to function CONSTRUCTOR_INIT_ARR cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(101,28) ]
   remark #15382: vectorization support: call to function for_alloc_assign_v2 cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(101,13) ]
   remark #15382: vectorization support: call to function for_dealloc_all_nocheck cannot be vectorized   [ /home/u175356/ScalSALE-main/src/Quantities/quantity.f90(101,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (101:13) and at (101:13)
LOOP END
===========================================================================

Begin optimization report for: READ_AND_INIT_MESH1

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(136,9) inlined into /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(110,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between this(:,:,:) (136:9) and at (136:9)
   remark #15346: vector dependence: assumed ANTI dependence between at (136:9) and this(:,:,:) (136:9)

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(136,9) inlined into /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(110,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between this(:,:,:) (136:9) and at (136:9)
      remark #15346: vector dependence: assumed ANTI dependence between at (136:9) and this(:,:,:) (136:9)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(136,9) inlined into /home/u175356/ScalSALE-main/src/Mesh/mesh.f90(110,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between this(:,:,:) (136:9) and at (136:9)
         remark #15346: vector dependence: assumed ANTI dependence between at (136:9) and this(:,:,:) (136:9)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: INIT_MESH_BASE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(108,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference at (108:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.364
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(108,9)
   remark #15389: vectorization support: reference at (108:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(108,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference at (108:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.364
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(109,9)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference at (109:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.364
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(109,9)
   remark #15389: vectorization support: reference at (109:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(109,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference at (109:9) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.364
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 8.100 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(111,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(111,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(111,9)
         remark #15389: vectorization support: reference at (111:9) has unaligned access
         remark #15389: vectorization support: reference df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 3.200 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(111,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference at (111:9) has unaligned access
         remark #15389: vectorization support: reference df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.818
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 3.200 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(112,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(112,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(112,9)
         remark #15389: vectorization support: reference this(:,:) has unaligned access
         remark #15389: vectorization support: reference df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 3.200 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Mesh/mesh_base.f90(112,9)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference this(:,:) has unaligned access
         remark #15389: vectorization support: reference df(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.818
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 3.200 
         remark #15488: --- end vector cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PROBLEM_MODULE^INITIALIZE_SIE

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(848,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(849,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(850,17)
      <Multiversioned v1>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (852:25) and SIE_VOF(tmp_mat,i,j,k) (852:25)
         remark #15346: vector dependence: assumed ANTI dependence between SIE_VOF(tmp_mat,i,j,k) (852:25) and SIE(i,j,k) (852:25)

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(851,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (852:25) and SIE_VOF(tmp_mat,i,j,k) (852:25)
            remark #15346: vector dependence: assumed ANTI dependence between SIE_VOF(tmp_mat,i,j,k) (852:25) and SIE(i,j,k) (852:25)
            remark #15346: vector dependence: assumed ANTI dependence between SIE(i,j,k) (852:25) and SIE(i,j,k) (852:25)
            remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (852:25) and SIE(i,j,k) (852:25)
            remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (852:25) and SIE(i,j,k) (852:25)
            remark #15346: vector dependence: assumed ANTI dependence between SIE(i,j,k) (852:25) and SIE(i,j,k) (852:25)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(851,21)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(850,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(851,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (852:25) and CELL_MASS_VOF(tmp_mat,i,j,k) (852:25)
            remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS_VOF(tmp_mat,i,j,k) (852:25) and SIE(i,j,k) (852:25)
         LOOP END

         LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(851,21)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(858,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(859,13)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (861:21) and CELL_MASS(i,j,k) (861:21)
      remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (861:21) and SIE(i,j,k) (861:21)

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(860,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (861:21) and CELL_MASS(i,j,k) (861:21)
         remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (861:21) and SIE(i,j,k) (861:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(860,17)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(859,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(860,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between SIE(i,j,k) (861:21) and CELL_MASS(i,j,k) (861:21)
         remark #15346: vector dependence: assumed ANTI dependence between CELL_MASS(i,j,k) (861:21) and SIE(i,j,k) (861:21)
      LOOP END

      LOOP BEGIN at /home/u175356/ScalSALE-main/src/Main/problem.f90(860,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================
